var app=function(){"use strict";function e(){}const t=e=>e;function r(e,t){for(const r in t)e[r]=t[r];return e}function s(e){return e()}function o(){return Object.create(null)}function n(e){e.forEach(s)}function i(e){return"function"==typeof e}function a(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function c(t,r,s){t.$$.on_destroy.push(function(t,...r){if(null==t)return e;const s=t.subscribe(...r);return s.unsubscribe?()=>s.unsubscribe():s}(r,s))}function l(e,t,r,s){if(e){const o=u(e,t,r,s);return e[0](o)}}function u(e,t,s,o){return e[1]&&o?r(s.ctx.slice(),e[1](o(t))):s.ctx}function p(e,t,r,s){if(e[2]&&s){const o=e[2](s(r));if(void 0===t.dirty)return o;if("object"==typeof o){const e=[],r=Math.max(t.dirty.length,o.length);for(let s=0;s<r;s+=1)e[s]=t.dirty[s]|o[s];return e}return t.dirty|o}return t.dirty}function d(e,t,r,s,o,n){if(o){const i=u(t,r,s,n);e.p(i,o)}}function h(e){if(e.ctx.length>32){const t=[],r=e.ctx.length/32;for(let e=0;e<r;e++)t[e]=-1;return t}return-1}const g="undefined"!=typeof window;let m=g?()=>window.performance.now():()=>Date.now(),f=g?e=>requestAnimationFrame(e):e;const _=new Set;function w(e){_.forEach((t=>{t.c(e)||(_.delete(t),t.f())})),0!==_.size&&f(w)}function T(e,t){e.appendChild(t)}function E(e,t,r){e.insertBefore(t,r||null)}function y(e){e.parentNode&&e.parentNode.removeChild(e)}function b(e,t){for(let r=0;r<e.length;r+=1)e[r]&&e[r].d(t)}function k(e){return document.createElement(e)}function v(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function G(e){return document.createTextNode(e)}function A(){return G(" ")}function S(){return G("")}function O(e,t,r){null==r?e.removeAttribute(t):e.getAttribute(t)!==r&&e.setAttribute(t,r)}function P(e,t){t=""+t,e.wholeText!==t&&(e.data=t)}function R(e,t,r,s){null===r?e.style.removeProperty(t):e.style.setProperty(t,r,s?"important":"")}let F;function U(e){F=e}const $=[],q=[],j=[],C=[],I=Promise.resolve();let x=!1;function D(e){j.push(e)}const L=new Set;let H=0;function W(){if(0!==H)return;const e=F;do{try{for(;H<$.length;){const e=$[H];H++,U(e),z(e.$$)}}catch(e){throw $.length=0,H=0,e}for(U(null),$.length=0,H=0;q.length;)q.pop()();for(let e=0;e<j.length;e+=1){const t=j[e];L.has(t)||(L.add(t),t())}j.length=0}while($.length);for(;C.length;)C.pop()();x=!1,L.clear(),U(e)}function z(e){if(null!==e.fragment){e.update(),n(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(D)}}const N=new Set;let B;function M(){B={r:0,c:[],p:B}}function V(){B.r||n(B.c),B=B.p}function K(e,t){e&&e.i&&(N.delete(e),e.i(t))}function J(e,t,r,s){if(e&&e.o){if(N.has(e))return;N.add(e),B.c.push((()=>{N.delete(e),s&&(r&&e.d(1),s())})),e.o(t)}else s&&s()}function Y(e){e&&e.c()}function Q(e,t,r,o){const{fragment:a,after_update:c}=e.$$;a&&a.m(t,r),o||D((()=>{const t=e.$$.on_mount.map(s).filter(i);e.$$.on_destroy?e.$$.on_destroy.push(...t):n(t),e.$$.on_mount=[]})),c.forEach(D)}function X(e,t){const r=e.$$;null!==r.fragment&&(n(r.on_destroy),r.fragment&&r.fragment.d(t),r.on_destroy=r.fragment=null,r.ctx=[])}function Z(e,t){-1===e.$$.dirty[0]&&($.push(e),x||(x=!0,I.then(W)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function ee(t,r,s,i,a,c,l,u=[-1]){const p=F;U(t);const d=t.$$={fragment:null,ctx:[],props:c,update:e,not_equal:a,bound:o(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(r.context||(p?p.$$.context:[])),callbacks:o(),dirty:u,skip_bound:!1,root:r.target||p.$$.root};l&&l(d.root);let h=!1;if(d.ctx=s?s(t,r.props||{},((e,r,...s)=>{const o=s.length?s[0]:r;return d.ctx&&a(d.ctx[e],d.ctx[e]=o)&&(!d.skip_bound&&d.bound[e]&&d.bound[e](o),h&&Z(t,e)),r})):[],d.update(),h=!0,n(d.before_update),d.fragment=!!i&&i(d.ctx),r.target){if(r.hydrate){const e=function(e){return Array.from(e.childNodes)}(r.target);d.fragment&&d.fragment.l(e),e.forEach(y)}else d.fragment&&d.fragment.c();r.intro&&K(t.$$.fragment),Q(t,r.target,r.anchor,r.customElement),W()}U(p)}class te{$destroy(){X(this,1),this.$destroy=e}$on(t,r){if(!i(r))return e;const s=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return s.push(r),()=>{const e=s.indexOf(r);-1!==e&&s.splice(e,1)}}$set(e){var t;this.$$set&&(t=e,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function re(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var se=Object.freeze({__proto__:null,getUserAgent:re}),oe=function e(t,r,s,o){if("function"!=typeof s)throw new Error("method for before hook must be a function");o||(o={});if(Array.isArray(r))return r.reverse().reduce((function(r,s){return e.bind(null,t,s,r,o)}),s)();return Promise.resolve().then((function(){return t.registry[r]?t.registry[r].reduce((function(e,t){return t.hook.bind(null,e,o)}),s)():s(o)}))};var ne=function(e,t,r,s){var o=s;e.registry[r]||(e.registry[r]=[]);"before"===t&&(s=function(e,t){return Promise.resolve().then(o.bind(null,t)).then(e.bind(null,t))});"after"===t&&(s=function(e,t){var r;return Promise.resolve().then(e.bind(null,t)).then((function(e){return o(r=e,t)})).then((function(){return r}))});"error"===t&&(s=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return o(e,t)}))});e.registry[r].push({hook:s,orig:o})};var ie=function(e,t,r){if(!e.registry[t])return;var s=e.registry[t].map((function(e){return e.orig})).indexOf(r);if(-1===s)return;e.registry[t].splice(s,1)};var ae=Function.bind,ce=ae.bind(ae);function le(e,t,r){var s=ce(ie,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach((function(s){var o=r?[t,s,r]:[t,s];e[s]=e.api[s]=ce(ne,null).apply(null,o)}))}function ue(){var e={registry:{}},t=oe.bind(null,e);return le(t,e),t}var pe=!1;function de(){return pe||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),pe=!0),ue()}de.Singular=function(){var e={registry:{}},t=oe.bind(null,e,"h");return le(t,e,"h"),t}.bind(),de.Collection=ue.bind();var he=de,ge=de,me=de.Singular,fe=de.Collection;
/*!
     * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */
function _e(e){return"[object Object]"===Object.prototype.toString.call(e)}function we(e){var t,r;return!1!==_e(e)&&(void 0===(t=e.constructor)||!1!==_e(r=t.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf"))}function Te(e,t){const r=Object.assign({},e);return Object.keys(t).forEach((s=>{we(t[s])?s in e?r[s]=Te(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})})),r}function Ee(e){for(const t in e)void 0===e[t]&&delete e[t];return e}function ye(e,t,r){if("string"==typeof t){let[e,s]=t.split(" ");r=Object.assign(s?{method:e,url:s}:{url:e},r)}else r=Object.assign({},t);var s;r.headers=(s=r.headers)?Object.keys(s).reduce(((e,t)=>(e[t.toLowerCase()]=s[t],e)),{}):{},Ee(r),Ee(r.headers);const o=Te(e||{},r);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map((e=>e.replace(/-preview/,""))),o}he.Hook=ge,he.Singular=me,he.Collection=fe;const be=/\{[^}]+\}/g;function ke(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function ve(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,r)=>(t[r]=e[r],t)),{})}function Ge(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function Ae(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Se(e,t,r){return t="+"===e||"#"===e?Ge(t):Ae(t),r?Ae(r)+"="+t:t}function Oe(e){return null!=e}function Pe(e){return";"===e||"&"===e||"?"===e}function Re(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,s,o){if(s){let e="";const o=[];if(-1!==r.indexOf(s.charAt(0))&&(e=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach((function(r){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(r);o.push(function(e,t,r,s){var o=e[r],n=[];if(Oe(o)&&""!==o)if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),s&&"*"!==s&&(o=o.substring(0,parseInt(s,10))),n.push(Se(t,o,Pe(t)?r:""));else if("*"===s)Array.isArray(o)?o.filter(Oe).forEach((function(e){n.push(Se(t,e,Pe(t)?r:""))})):Object.keys(o).forEach((function(e){Oe(o[e])&&n.push(Se(t,o[e],e))}));else{const e=[];Array.isArray(o)?o.filter(Oe).forEach((function(r){e.push(Se(t,r))})):Object.keys(o).forEach((function(r){Oe(o[r])&&(e.push(Ae(r)),e.push(Se(t,o[r].toString())))})),Pe(t)?n.push(Ae(r)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===t?Oe(o)&&n.push(Ae(r)):""!==o||"&"!==t&&"?"!==t?""===o&&n.push(""):n.push(Ae(r)+"=");return n}(t,e,s[1],s[2]||s[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==o.length?e:"")+o.join(n)}return o.join(",")}return Ge(o)}))}function Fe(e){let t,r=e.method.toUpperCase(),s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),n=ve(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const t=e.match(be);return t?t.map(ke).reduce(((e,t)=>e.concat(t)),[]):[]}(s);var a;s=(a=s,{expand:Re.bind(null,a)}).expand(n),/^http/.test(s)||(s=e.baseUrl+s);const c=ve(n,Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),e.mediaType.previews.length)){const t=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=t.concat(e.mediaType.previews).map((t=>`application/vnd.github.${t}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(r)?s=function(e,t){const r=/\?/.test(e)?"&":"?",s=Object.keys(t);return 0===s.length?e:e+r+s.map((e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`)).join("&")}(s,c):"data"in c?t=c.data:Object.keys(c).length&&(t=c),o["content-type"]||void 0===t||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&void 0===t&&(t=""),Object.assign({method:r,url:s,headers:o},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function Ue(e,t,r){return Fe(ye(e,t,r))}const $e=function e(t,r){const s=ye(t,r),o=Ue.bind(null,s);return Object.assign(o,{DEFAULTS:s,defaults:e.bind(null,s),merge:ye.bind(null,s),parse:Fe})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/7.0.5 ${re()}`},mediaType:{format:"",previews:[]}});var qe="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function je(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(r){var s=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return e[r]}})})),t}function Ce(e){var t={exports:{}};return e(t,t.exports),t.exports}var Ie=Ce((function(e,t){var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==qe)return qe;throw new Error("unable to locate global object")}();e.exports=t=r.fetch,r.fetch&&(t.default=r.fetch.bind(r)),t.Headers=r.Headers,t.Request=r.Request,t.Response=r.Response}));class xe extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var De=function e(t,r){if(t&&r)return e(t)(r);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach((function(e){s[e]=t[e]})),s;function s(){for(var e=new Array(arguments.length),r=0;r<e.length;r++)e[r]=arguments[r];var s=t.apply(this,e),o=e[e.length-1];return"function"==typeof s&&s!==o&&Object.keys(o).forEach((function(e){s[e]=o[e]})),s}};var Le=De(We),He=De(ze);function We(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function ze(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}We.proto=We((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return We(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return ze(this)},configurable:!0})})),Le.strict=He;const Ne=Le((e=>console.warn(e))),Be=Le((e=>console.warn(e)));class Me extends Error{constructor(e,t,r){let s;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,"headers"in r&&void 0!==r.headers&&(s=r.headers),"response"in r&&(this.response=r.response,s=r.response.headers);const o=Object.assign({},r.request);r.request.headers.authorization&&(o.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get:()=>(Ne(new xe("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),Object.defineProperty(this,"headers",{get:()=>(Be(new xe("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),s||{})})}}var Ve=Object.freeze({__proto__:null,RequestError:Me});function Ke(e){const t=e.request&&e.request.log?e.request.log:console;(we(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,s,o={};return(e.request&&e.request.fetch||globalThis.fetch||Ie)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((async n=>{s=n.url,r=n.status;for(const e of n.headers)o[e[0]]=e[1];if("deprecation"in o){const r=o.link&&o.link.match(/<([^>]+)>; rel="deprecation"/),s=r&&r.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${o.sunset}${s?`. See ${s}`:""}`)}if(204!==r&&205!==r){if("HEAD"===e.method){if(r<400)return;throw new Me(n.statusText,r,{response:{url:s,status:r,headers:o,data:void 0},request:e})}if(304===r)throw new Me("Not modified",r,{response:{url:s,status:r,headers:o,data:await Je(n)},request:e});if(r>=400){const t=await Je(n),i=new Me(function(e){if("string"==typeof e)return e;if("message"in e)return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message;return`Unknown error: ${JSON.stringify(e)}`}(t),r,{response:{url:s,status:r,headers:o,data:t},request:e});throw i}return Je(n)}})).then((e=>({status:r,url:s,headers:o,data:e}))).catch((t=>{if(t instanceof Me)throw t;if("AbortError"===t.name)throw t;throw new Me(t.message,500,{request:e})}))}async function Je(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json():!t||/^text\/|charset=utf-8$/.test(t)?e.text():function(e){return e.arrayBuffer()}(e)}const Ye=function e(t,r){const s=t.defaults(r);return Object.assign((function(t,r){const o=s.merge(t,r);if(!o.request||!o.request.hook)return Ke(s.parse(o));const n=(e,t)=>Ke(s.parse(s.merge(e,t)));return Object.assign(n,{endpoint:s,defaults:e.bind(null,s)}),o.request.hook(n,o)}),{endpoint:s,defaults:e.bind(null,s)})}($e,{headers:{"user-agent":`octokit-request.js/6.2.3 ${re()}`}});var Qe=Object.freeze({__proto__:null,request:Ye});class Xe extends Error{constructor(e,t,r){super("Request failed due to following response errors:\n"+r.errors.map((e=>` - ${e.message}`)).join("\n")),this.request=e,this.headers=t,this.response=r,this.name="GraphqlResponseError",this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const Ze=["method","baseUrl","url","headers","request","query","mediaType"],et=["query","method","url"],tt=/\/api\/v3\/?$/;function rt(e,t){const r=e.defaults(t);return Object.assign(((e,t)=>function(e,t,r){if(r){if("string"==typeof t&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in r)if(et.includes(e))return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}const s="string"==typeof t?Object.assign({query:t},r):t,o=Object.keys(s).reduce(((e,t)=>Ze.includes(t)?(e[t]=s[t],e):(e.variables||(e.variables={}),e.variables[t]=s[t],e)),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return tt.test(n)&&(o.url=n.replace(tt,"/api/graphql")),e(o).then((e=>{if(e.data.errors){const t={};for(const r of Object.keys(e.headers))t[r]=e.headers[r];throw new Xe(o,t,e.data)}return e.data.data}))}(r,e,t)),{defaults:rt.bind(null,r),endpoint:r.endpoint})}rt(Ye,{headers:{"user-agent":`octokit-graphql.js/5.0.5 ${re()}`},method:"POST",url:"/graphql"});const st=/^v1\./,ot=/^ghs_/,nt=/^ghu_/;async function it(e){const t=3===e.split(/\./).length,r=st.test(e)||ot.test(e),s=nt.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}async function at(e,t,r,s){const o=t.endpoint.merge(r,s);return o.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),t(o)}const ct=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(it.bind(null,e),{hook:at.bind(null,e)})},lt="4.2.0";class ut{constructor(e={}){const t=new fe,r={baseUrl:Ye.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};var s;if(r.headers["user-agent"]=[e.userAgent,`octokit-core.js/${lt} ${re()}`].filter(Boolean).join(" "),e.baseUrl&&(r.baseUrl=e.baseUrl),e.previews&&(r.mediaType.previews=e.previews),e.timeZone&&(r.headers["time-zone"]=e.timeZone),this.request=Ye.defaults(r),this.graphql=(s=this.request,rt(s,{method:"POST",url:"/graphql"})).defaults(r),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=t,e.authStrategy){const{authStrategy:r,...s}=e,o=r(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));t.wrap("request",o.hook),this.auth=o}else if(e.auth){const r=ct(e.auth);t.wrap("request",r.hook),this.auth=r}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((t=>{Object.assign(this,t(this,e))}))}static defaults(e){return class extends(this){constructor(...t){const r=t[0]||{};super("function"!=typeof e?Object.assign({},e,r,r.userAgent&&e.userAgent?{userAgent:`${r.userAgent} ${e.userAgent}`}:null):e(r))}}}static plugin(...e){var t;const r=this.plugins;return(t=class extends(this){}).plugins=r.concat(e.filter((e=>!r.includes(e)))),t}}ut.VERSION=lt,ut.plugins=[];var pt=Object.freeze({__proto__:null,Octokit:ut});function dt(e,t,r){const s="function"==typeof t?t.endpoint(r):e.request.endpoint(t,r),o="function"==typeof t?t:e.request,n=s.method,i=s.headers;let a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{const e=function(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data)||"url"in e.data)return e;const t=e.data.incomplete_results,r=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const o=Object.keys(e.data)[0],n=e.data[o];return e.data=n,void 0!==t&&(e.data.incomplete_results=t),void 0!==r&&(e.data.repository_selection=r),e.data.total_count=s,e}(await o({method:n,url:a,headers:i}));return a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}}catch(e){if(409!==e.status)throw e;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function ht(e,t,r,s){return"function"==typeof r&&(s=r,r=void 0),gt(e,[],dt(e,t,r)[Symbol.asyncIterator](),s)}function gt(e,t,r,s){return r.next().then((o=>{if(o.done)return t;let n=!1;return t=t.concat(s?s(o.value,(function(){n=!0})):o.value.data),n?t:gt(e,t,r,s)}))}const mt=Object.assign(ht,{iterator:dt}),ft=["GET /app/hook/deliveries","GET /app/installations","GET /enterprises/{enterprise}/actions/runner-groups","GET /enterprises/{enterprise}/dependabot/alerts","GET /enterprises/{enterprise}/secret-scanning/alerts","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /licenses","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/cache/usage-by-repository","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/required_workflows","GET /orgs/{org}/actions/runner-groups","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/actions/variables","GET /orgs/{org}/actions/variables/{name}/repositories","GET /orgs/{org}/blocks","GET /orgs/{org}/code-scanning/alerts","GET /orgs/{org}/codespaces","GET /orgs/{org}/codespaces/secrets","GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories","GET /orgs/{org}/dependabot/alerts","GET /orgs/{org}/dependabot/secrets","GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories","GET /orgs/{org}/events","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/members/{username}/codespaces","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/packages","GET /orgs/{org}/packages/{package_type}/{package_name}/versions","GET /orgs/{org}/projects","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/secret-scanning/alerts","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{org}/{repo}/actions/required_workflows","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/caches","GET /repos/{owner}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/variables","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/codespaces","GET /repos/{owner}/{repo}/codespaces/devcontainers","GET /repos/{owner}/{repo}/codespaces/secrets","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/status","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/dependabot/alerts","GET /repos/{owner}/{repo}/dependabot/secrets","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/environments","GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/releases/{release_id}/reactions","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repos/{owner}/{repo}/topics","GET /repositories","GET /repositories/{repository_id}/environments/{environment_name}/secrets","GET /repositories/{repository_id}/environments/{environment_name}/variables","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/codespaces","GET /user/codespaces/secrets","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/packages","GET /user/packages/{package_type}/{package_name}/versions","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/ssh_signing_keys","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /users","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/packages","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/ssh_signing_keys","GET /users/{username}/starred","GET /users/{username}/subscriptions"];function _t(e){return{paginate:Object.assign(ht.bind(null,e),{iterator:dt.bind(null,e)})}}_t.VERSION="6.0.0";var wt=Object.freeze({__proto__:null,composePaginateRest:mt,isPaginatingEndpoint:function(e){return"string"==typeof e&&ft.includes(e)},paginateRest:_t,paginatingEndpoints:ft});const Tt={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],addSelectedRepoToRequiredWorkflow:["PUT /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repositories/{repository_id}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createRequiredWorkflow:["POST /orgs/{org}/actions/required_workflows"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteRequiredWorkflow:["DELETE /orgs/{org}/actions/required_workflows/{required_workflow_id}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoRequiredWorkflow:["GET /repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}"],getRepoRequiredWorkflowUsage:["GET /repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/timing"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getRequiredWorkflow:["GET /orgs/{org}/actions/required_workflows/{required_workflow_id}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repositories/{repository_id}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoRequiredWorkflows:["GET /repos/{org}/{repo}/actions/required_workflows"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRequiredWorkflowRuns:["GET /repos/{owner}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs"],listRequiredWorkflows:["GET /orgs/{org}/actions/required_workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelectedRepositoriesRequiredWorkflow:["GET /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],removeSelectedRepoFromRequiredWorkflow:["DELETE /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedReposToRequiredWorkflow:["PUT /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],updateRequiredWorkflow:["PATCH /orgs/{org}/actions/required_workflows/{required_workflow_id}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setCodespacesBilling:["PUT /orgs/{org}/codespaces/billing"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{addCustomLabelsToSelfHostedRunnerForEnterprise:["POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],listLabelsForSelfHostedRunnerForEnterprise:["GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployment"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableLfsForRepo:["DELETE /repos/{owner}/{repo}/lfs"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enableLfsForRepo:["PUT /repos/{owner}/{repo}/lfs"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getSecurityAnalysisSettingsForEnterprise:["GET /enterprises/{enterprise}/code_security_and_analysis"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],patchSecurityAnalysisSettingsForEnterprise:["PATCH /enterprises/{enterprise}/code_security_and_analysis"],postSecurityProductEnablementForEnterprise:["POST /enterprises/{enterprise}/{security_product}/{enablement}"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function Et(e,t,r,s,o){const n=e.request.defaults(s);return Object.assign((function(...s){let i=n.endpoint.merge(...s);if(o.mapToData)return i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:void 0}),n(i);if(o.renamed){const[s,n]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${s}.${n}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const i=n.endpoint.merge(...s);for(const[s,n]of Object.entries(o.renamedParameters))s in i&&(e.log.warn(`"${s}" parameter is deprecated for "octokit.${t}.${r}()". Use "${n}" instead`),n in i||(i[n]=i[s]),delete i[s]);return n(i)}return n(...s)}),n)}function yt(e){const t=function(e,t){const r={};for(const[s,o]of Object.entries(t))for(const[t,n]of Object.entries(o)){const[o,i,a]=n,[c,l]=o.split(/ /),u=Object.assign({method:c,url:l},i);r[s]||(r[s]={});const p=r[s];p[t]=a?Et(e,s,t,u,a):e.request.defaults(u)}return r}(e,Tt);return{rest:t}}yt.VERSION="7.0.1";var bt=Ce((function(e,t){e.exports=function(){var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==qe?qe:"undefined"!=typeof self?self:{};function t(e){return e&&e.default||e}var r,s={load:function(e,t,r={}){var s,o,n;for(s in t)n=t[s],r[s]=null!=(o=e[s])?o:n;return r},overwrite:function(e,t,r={}){var s,o;for(s in e)o=e[s],void 0!==t[s]&&(r[s]=o);return r}},o=class{constructor(e,t){this.incr=e,this.decr=t,this._first=null,this._last=null,this.length=0}push(e){var t;this.length++,"function"==typeof this.incr&&this.incr(),t={value:e,prev:this._last,next:null},null!=this._last?(this._last.next=t,this._last=t):this._first=this._last=t}shift(){var e;if(null!=this._first)return this.length--,"function"==typeof this.decr&&this.decr(),e=this._first.value,null!=(this._first=this._first.next)?this._first.prev=null:this._last=null,e}first(){if(null!=this._first)return this._first.value}getArray(){var e,t,r;for(e=this._first,r=[];null!=e;)r.push((t=e,e=e.next,t.value));return r}forEachShift(e){var t;for(t=this.shift();null!=t;)e(t),t=this.shift()}debug(){var e,t,r,s,o;for(e=this._first,o=[];null!=e;)o.push((t=e,e=e.next,{value:t.value,prev:null!=(r=t.prev)?r.value:void 0,next:null!=(s=t.next)?s.value:void 0}));return o}};r=class{constructor(e){if(this.instance=e,this._events={},null!=this.instance.on||null!=this.instance.once||null!=this.instance.removeAllListeners)throw new Error("An Emitter already exists for this object");this.instance.on=(e,t)=>this._addListener(e,"many",t),this.instance.once=(e,t)=>this._addListener(e,"once",t),this.instance.removeAllListeners=(e=null)=>null!=e?delete this._events[e]:this._events={}}_addListener(e,t,r){var s;return null==(s=this._events)[e]&&(s[e]=[]),this._events[e].push({cb:r,status:t}),this.instance}listenerCount(e){return null!=this._events[e]?this._events[e].length:0}async trigger(e,...t){var r,s;try{if("debug"!==e&&this.trigger("debug",`Event triggered: ${e}`,t),null==this._events[e])return;return this._events[e]=this._events[e].filter((function(e){return"none"!==e.status})),s=this._events[e].map((async e=>{var r,s;if("none"!==e.status){"once"===e.status&&(e.status="none");try{return"function"==typeof(null!=(s="function"==typeof e.cb?e.cb(...t):void 0)?s.then:void 0)?await s:s}catch(e){return r=e,this.trigger("error",r),null}}})),(await Promise.all(s)).find((function(e){return null!=e}))}catch(e){return r=e,this.trigger("error",r),null}}};var n,i,a=r;n=o,i=a;var c,l,u,p,d,h=class{constructor(e){this.Events=new i(this),this._length=0,this._lists=function(){var t,r,s;for(s=[],t=1,r=e;1<=r?t<=r:t>=r;1<=r?++t:--t)s.push(new n((()=>this.incr()),(()=>this.decr())));return s}.call(this)}incr(){if(0==this._length++)return this.Events.trigger("leftzero")}decr(){if(0==--this._length)return this.Events.trigger("zero")}push(e){return this._lists[e.options.priority].push(e)}queued(e){return null!=e?this._lists[e].length:this._length}shiftAll(e){return this._lists.forEach((function(t){return t.forEachShift(e)}))}getFirst(e=this._lists){var t,r,s;for(t=0,r=e.length;t<r;t++)if((s=e[t]).length>0)return s;return[]}shiftLastFrom(e){return this.getFirst(this._lists.slice(e).reverse()).shift()}},g=class extends Error{};p=10,l=5,d=s,c=g,u=class{constructor(e,t,r,s,o,n,i,a){this.task=e,this.args=t,this.rejectOnDrop=o,this.Events=n,this._states=i,this.Promise=a,this.options=d.load(r,s),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===s.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise(((e,t)=>{this._resolve=e,this._reject=t})),this.retryCount=0}_sanitizePriority(e){var t;return(t=~~e!==e?l:e)<0?0:t>p-1?p-1:t}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:e,message:t="This job has been dropped by Bottleneck"}={}){return!!this._states.remove(this.options.id)&&(this.rejectOnDrop&&this._reject(null!=e?e:new c(t)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0)}_assertStatus(e){var t;if((t=this._states.jobStatus(this.options.id))!==e&&("DONE"!==e||null!==t))throw new c(`Invalid job status ${t}, expected ${e}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(e,t){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:e,blocked:t})}doRun(){return 0===this.retryCount?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(e,t,r,s){var o,n,i;0===this.retryCount?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),n={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",n);try{if(i=await(null!=e?e.schedule(this.options,this.task,...this.args):this.task(...this.args)),t())return this.doDone(n),await s(this.options,n),this._assertStatus("DONE"),this._resolve(i)}catch(e){return o=e,this._onFailure(o,n,t,r,s)}}doExpire(e,t,r){var s,o;return this._states.jobStatus("RUNNING"===this.options.id)&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),o={args:this.args,options:this.options,retryCount:this.retryCount},s=new c(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(s,o,e,t,r)}async _onFailure(e,t,r,s,o){var n,i;if(r())return null!=(n=await this.Events.trigger("failed",e,t))?(i=~~n,this.Events.trigger("retry",`Retrying ${this.options.id} after ${i} ms`,t),this.retryCount++,s(i)):(this.doDone(t),await o(this.options,t),this._assertStatus("DONE"),this._reject(e))}doDone(e){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",e)}};var m,f,_,w=u;_=s,m=g,f=class{constructor(e,t,r){this.instance=e,this.storeOptions=t,this.clientId=this.instance._randomIndex(),_.load(r,r,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var e;return null==this.heartbeat&&(null!=this.storeOptions.reservoirRefreshInterval&&null!=this.storeOptions.reservoirRefreshAmount||null!=this.storeOptions.reservoirIncreaseInterval&&null!=this.storeOptions.reservoirIncreaseAmount)?"function"==typeof(e=this.heartbeat=setInterval((()=>{var e,t,r,s,o;if(s=Date.now(),null!=this.storeOptions.reservoirRefreshInterval&&s>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=s,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),null!=this.storeOptions.reservoirIncreaseInterval&&s>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&(({reservoirIncreaseAmount:e,reservoirIncreaseMaximum:r,reservoir:o}=this.storeOptions),this._lastReservoirIncrease=s,(t=null!=r?Math.min(e,r-o):e)>0))return this.storeOptions.reservoir+=t,this.instance._drainAll(this.computeCapacity())}),this.heartbeatInterval)).unref?e.unref():void 0:clearInterval(this.heartbeat)}async __publish__(e){return await this.yieldLoop(),this.instance.Events.trigger("message",e.toString())}async __disconnect__(e){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(e=0){return new this.Promise((function(t,r){return setTimeout(t,e)}))}computePenalty(){var e;return null!=(e=this.storeOptions.penalty)?e:15*this.storeOptions.minTime||5e3}async __updateSettings__(e){return await this.yieldLoop(),_.overwrite(e,e,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(e){return await this.yieldLoop(),this._nextRequest+this.timeout<e}computeCapacity(){var e,t;return({maxConcurrent:e,reservoir:t}=this.storeOptions),null!=e&&null!=t?Math.min(e-this._running,t):null!=e?e-this._running:null!=t?t:null}conditionsCheck(e){var t;return null==(t=this.computeCapacity())||e<=t}async __incrementReservoir__(e){var t;return await this.yieldLoop(),t=this.storeOptions.reservoir+=e,this.instance._drainAll(this.computeCapacity()),t}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(e){return this._unblockTime>=e}check(e,t){return this.conditionsCheck(e)&&this._nextRequest-t<=0}async __check__(e){var t;return await this.yieldLoop(),t=Date.now(),this.check(e,t)}async __register__(e,t,r){var s,o;return await this.yieldLoop(),s=Date.now(),this.conditionsCheck(t)?(this._running+=t,null!=this.storeOptions.reservoir&&(this.storeOptions.reservoir-=t),o=Math.max(this._nextRequest-s,0),this._nextRequest=s+o+this.storeOptions.minTime,{success:!0,wait:o,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return 3===this.storeOptions.strategy}async __submit__(e,t){var r,s,o;if(await this.yieldLoop(),null!=this.storeOptions.maxConcurrent&&t>this.storeOptions.maxConcurrent)throw new m(`Impossible to add a job having a weight of ${t} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return s=Date.now(),o=null!=this.storeOptions.highWater&&e===this.storeOptions.highWater&&!this.check(t,s),(r=this.strategyIsBlock()&&(o||this.isBlocked(s)))&&(this._unblockTime=s+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:o,blocked:r,strategy:this.storeOptions.strategy}}async __free__(e,t){return await this.yieldLoop(),this._running-=t,this._done+=t,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var T,E,y=f;T=g,E=class{constructor(e){this.status=e,this._jobs={},this.counts=this.status.map((function(){return 0}))}next(e){var t,r;return r=(t=this._jobs[e])+1,null!=t&&r<this.status.length?(this.counts[t]--,this.counts[r]++,this._jobs[e]++):null!=t?(this.counts[t]--,delete this._jobs[e]):void 0}start(e){var t;return t=0,this._jobs[e]=t,this.counts[t]++}remove(e){var t;return null!=(t=this._jobs[e])&&(this.counts[t]--,delete this._jobs[e]),null!=t}jobStatus(e){var t;return null!=(t=this.status[this._jobs[e]])?t:null}statusJobs(e){var t,r,s,o;if(null!=e){if((r=this.status.indexOf(e))<0)throw new T(`status must be one of ${this.status.join(", ")}`);for(t in o=[],s=this._jobs)s[t]===r&&o.push(t);return o}return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce(((e,t,r)=>(e[this.status[r]]=t,e)),{})}};var b,k=E;b=o;var v,G,A,S,O,P,R=class{constructor(e,t){this.schedule=this.schedule.bind(this),this.name=e,this.Promise=t,this._running=0,this._queue=new b}isEmpty(){return 0===this._queue.length}async _tryToRun(){var e,t,r,s,o,n,i;if(this._running<1&&this._queue.length>0)return this._running++,({task:i,args:e,resolve:o,reject:s}=this._queue.shift()),t=await async function(){try{return n=await i(...e),function(){return o(n)}}catch(e){return r=e,function(){return s(r)}}}(),this._running--,this._tryToRun(),t()}schedule(e,...t){var r,s,o;return o=s=null,r=new this.Promise((function(e,t){return o=e,s=t})),this._queue.push({task:e,args:t,resolve:o,reject:s}),this._tryToRun(),r}},F="2.19.5",U={version:F},$=Object.freeze({version:F,default:U}),q=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),j=()=>console.log("You must import the full version of Bottleneck in order to use this feature.");P=s,v=a,S=q,A=j,O=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),G=function(){class e{constructor(e={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=e,P.load(this.limiterOptions,this.defaults,this),this.Events=new v(this),this.instances={},this.Bottleneck=ee,this._startAutoCleanup(),this.sharedConnection=null!=this.connection,null==this.connection&&("redis"===this.limiterOptions.datastore?this.connection=new S(Object.assign({},this.limiterOptions,{Events:this.Events})):"ioredis"===this.limiterOptions.datastore&&(this.connection=new A(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(e=""){var t;return null!=(t=this.instances[e])?t:(()=>{var t;return t=this.instances[e]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${e}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",t,e),t})()}async deleteKey(e=""){var t,r;return r=this.instances[e],this.connection&&(t=await this.connection.__runCommand__(["del",...O.allKeys(`${this.id}-${e}`)])),null!=r&&(delete this.instances[e],await r.disconnect()),null!=r||t>0}limiters(){var e,t,r,s;for(e in r=[],t=this.instances)s=t[e],r.push({key:e,limiter:s});return r}keys(){return Object.keys(this.instances)}async clusterKeys(){var e,t,r,s,o,n,i,a,c;if(null==this.connection)return this.Promise.resolve(this.keys());for(n=[],e=null,c=`b_${this.id}-`.length,t="_settings".length;0!==e;)for([a,r]=await this.connection.__runCommand__(["scan",null!=e?e:0,"match",`b_${this.id}-*_settings`,"count",1e4]),e=~~a,s=0,i=r.length;s<i;s++)o=r[s],n.push(o.slice(c,-t));return n}_startAutoCleanup(){var e;return clearInterval(this.interval),"function"==typeof(e=this.interval=setInterval((async()=>{var e,t,r,s,o,n;for(t in o=Date.now(),s=[],r=this.instances){n=r[t];try{await n._store.__groupCheck__(o)?s.push(this.deleteKey(t)):s.push(void 0)}catch(t){e=t,s.push(n.Events.trigger("error",e))}}return s}),this.timeout/2)).unref?e.unref():void 0}updateSettings(e={}){if(P.overwrite(e,this.defaults,this),P.overwrite(e,e,this.limiterOptions),null!=e.timeout)return this._startAutoCleanup()}disconnect(e=!0){var t;if(!this.sharedConnection)return null!=(t=this.connection)?t.disconnect(e):void 0}}return e.prototype.defaults={timeout:3e5,connection:null,Promise:Promise,id:"group-key"},e}.call(e);var C,I,x=G;I=s,C=a;var D,L,H,W,z,N,B,M,V,K,J,Y=function(){class e{constructor(e={}){this.options=e,I.load(this.options,this.defaults,this),this.Events=new C(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise(((e,t)=>this._resolve=e))}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(e){var t;return this._arr.push(e),t=this._promise,this._arr.length===this.maxSize?this._flush():null!=this.maxTime&&1===this._arr.length&&(this._timeout=setTimeout((()=>this._flush()),this.maxTime)),t}}return e.prototype.defaults={maxTime:null,maxSize:null,Promise:Promise},e}.call(e),Q=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),X=t($),Z=[].splice;N=10,L=5,J=s,B=h,W=w,z=y,M=Q,H=a,V=k,K=R,D=function(){class e{constructor(t={},...r){var s,o;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(t,r),J.load(t,this.instanceDefaults,this),this._queues=new B(N),this._scheduled={},this._states=new V(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new H(this),this._submitLock=new K("submit",this.Promise),this._registerLock=new K("register",this.Promise),o=J.load(t,this.storeDefaults,{}),this._store=function(){if("redis"===this.datastore||"ioredis"===this.datastore||null!=this.connection)return s=J.load(t,this.redisStoreDefaults,{}),new M(this,o,s);if("local"===this.datastore)return s=J.load(t,this.localStoreDefaults,{}),new z(this,o,s);throw new e.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}.call(this),this._queues.on("leftzero",(()=>{var e;return null!=(e=this._store.heartbeat)&&"function"==typeof e.ref?e.ref():void 0})),this._queues.on("zero",(()=>{var e;return null!=(e=this._store.heartbeat)&&"function"==typeof e.unref?e.unref():void 0}))}_validateOptions(t,r){if(null==t||"object"!=typeof t||0!==r.length)throw new e.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(e){return this._store.__publish__(e)}disconnect(e=!0){return this._store.__disconnect__(e)}chain(e){return this._limiter=e,this}queued(e){return this._queues.queued(e)}clusterQueued(){return this._store.__queued__()}empty(){return 0===this.queued()&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(e){return this._states.jobStatus(e)}jobs(e){return this._states.statusJobs(e)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(e=1){return this._store.__check__(e)}_clearGlobalState(e){return null!=this._scheduled[e]&&(clearTimeout(this._scheduled[e].expiration),delete this._scheduled[e],!0)}async _free(e,t,r,s){var o,n;try{if(({running:n}=await this._store.__free__(e,r.weight)),this.Events.trigger("debug",`Freed ${r.id}`,s),0===n&&this.empty())return this.Events.trigger("idle")}catch(e){return o=e,this.Events.trigger("error",o)}}_run(e,t,r){var s,o,n;return t.doRun(),s=this._clearGlobalState.bind(this,e),n=this._run.bind(this,e,t),o=this._free.bind(this,e,t),this._scheduled[e]={timeout:setTimeout((()=>t.doExecute(this._limiter,s,n,o)),r),expiration:null!=t.options.expiration?setTimeout((function(){return t.doExpire(s,n,o)}),r+t.options.expiration):void 0,job:t}}_drainOne(e){return this._registerLock.schedule((()=>{var t,r,s,o,n;return 0===this.queued()?this.Promise.resolve(null):(n=this._queues.getFirst(),({options:o,args:t}=s=n.first()),null!=e&&o.weight>e?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${o.id}`,{args:t,options:o}),r=this._randomIndex(),this._store.__register__(r,o.weight,o.expiration).then((({success:e,wait:i,reservoir:a})=>{var c;return this.Events.trigger("debug",`Drained ${o.id}`,{success:e,args:t,options:o}),e?(n.shift(),(c=this.empty())&&this.Events.trigger("empty"),0===a&&this.Events.trigger("depleted",c),this._run(r,s,i),this.Promise.resolve(o.weight)):this.Promise.resolve(null)}))))}))}_drainAll(e,t=0){return this._drainOne(e).then((r=>{var s;return null!=r?(s=null!=e?e-r:e,this._drainAll(s,t+r)):this.Promise.resolve(t)})).catch((e=>this.Events.trigger("error",e)))}_dropAllQueued(e){return this._queues.shiftAll((function(t){return t.doDrop({message:e})}))}stop(t={}){var r,s;return t=J.load(t,this.stopDefaults),s=e=>{var t;return t=()=>{var t;return(t=this._states.counts)[0]+t[1]+t[2]+t[3]===e},new this.Promise(((e,r)=>t()?e():this.on("done",(()=>{if(t())return this.removeAllListeners("done"),e()}))))},r=t.dropWaitingJobs?(this._run=function(e,r){return r.doDrop({message:t.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule((()=>this._submitLock.schedule((()=>{var e,r,o;for(e in r=this._scheduled)o=r[e],"RUNNING"===this.jobStatus(o.job.options.id)&&(clearTimeout(o.timeout),clearTimeout(o.expiration),o.job.doDrop({message:t.dropErrorMessage}));return this._dropAllQueued(t.dropErrorMessage),s(0)}))))):this.schedule({priority:N-1,weight:0},(()=>s(1))),this._receive=function(r){return r._reject(new e.prototype.BottleneckError(t.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new e.prototype.BottleneckError("stop() has already been called")),r}async _addToQueue(t){var r,s,o,n,i,a,c;({args:r,options:n}=t);try{({reachedHWM:i,blocked:s,strategy:c}=await this._store.__submit__(this.queued(),n.weight))}catch(e){return o=e,this.Events.trigger("debug",`Could not queue ${n.id}`,{args:r,options:n,error:o}),t.doDrop({error:o}),!1}return s?(t.doDrop(),!0):i&&(null!=(a=c===e.prototype.strategy.LEAK?this._queues.shiftLastFrom(n.priority):c===e.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(n.priority+1):c===e.prototype.strategy.OVERFLOW?t:void 0)&&a.doDrop(),null==a||c===e.prototype.strategy.OVERFLOW)?(null==a&&t.doDrop(),i):(t.doQueue(i,s),this._queues.push(t),await this._drainAll(),i)}_receive(t){return null!=this._states.jobStatus(t.options.id)?(t._reject(new e.prototype.BottleneckError(`A job with the same id already exists (id=${t.options.id})`)),!1):(t.doReceive(),this._submitLock.schedule(this._addToQueue,t))}submit(...e){var t,r,s,o,n,i,a;return"function"==typeof e[0]?(n=e,[r,...e]=n,[t]=Z.call(e,-1),o=J.load({},this.jobDefaults)):(i=e,[o,r,...e]=i,[t]=Z.call(e,-1),o=J.load(o,this.jobDefaults)),a=(...e)=>new this.Promise((function(t,s){return r(...e,(function(...e){return(null!=e[0]?s:t)(e)}))})),(s=new W(a,e,o,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise)).promise.then((function(e){return"function"==typeof t?t(...e):void 0})).catch((function(e){return Array.isArray(e)?"function"==typeof t?t(...e):void 0:"function"==typeof t?t(e):void 0})),this._receive(s)}schedule(...e){var t,r,s;return"function"==typeof e[0]?([s,...e]=e,r={}):[r,s,...e]=e,t=new W(s,e,r,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(t),t.promise}wrap(e){var t,r;return t=this.schedule.bind(this),(r=function(...r){return t(e.bind(this),...r)}).withOptions=function(r,...s){return t(r,e,...s)},r}async updateSettings(e={}){return await this._store.__updateSettings__(J.overwrite(e,this.storeDefaults)),J.overwrite(e,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(e=0){return this._store.__incrementReservoir__(e)}}return e.default=e,e.Events=H,e.version=e.prototype.version=X.version,e.strategy=e.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},e.BottleneckError=e.prototype.BottleneckError=g,e.Group=e.prototype.Group=x,e.RedisConnection=e.prototype.RedisConnection=q,e.IORedisConnection=e.prototype.IORedisConnection=j,e.Batcher=e.prototype.Batcher=Y,e.prototype.jobDefaults={priority:L,weight:1,expiration:null,id:"<no-id>"},e.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:e.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},e.prototype.localStoreDefaults={Promise:Promise,timeout:null,heartbeatInterval:250},e.prototype.redisStoreDefaults={Promise:Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},e.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise:Promise},e.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},e}.call(e);var ee=D;return ee}()}));async function kt(e,t,r,s){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!t.doNotRetry.includes(r.status)){const o=null!=s.request.retries?s.request.retries:t.retries,n=Math.pow((s.request.retryCount||0)+1,2);throw e.retry.retryRequest(r,o,n)}throw r}async function vt(e,t,r){const s=new bt;return s.on("failed",(function(t,s){const o=~~t.request.request.retries,n=~~t.request.request.retryAfter;if(r.request.retryCount=s.retryCount+1,o>s.retryCount)return n*e.retryAfterBaseValue})),s.schedule(Gt.bind(null,t),r)}async function Gt(e,t){const r=await e(e,t);if(r.data&&r.data.errors&&/Something went wrong while executing your query/.test(r.data.errors[0].message)){throw new Me(r.data.errors[0].message,500,{request:t,response:r})}return r}function At(e,t){const r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422],retries:3},t.retry);return r.enabled&&(e.hook.error("request",kt.bind(null,e,r)),e.hook.wrap("request",vt.bind(null,r))),{retry:{retryRequest:(e,t,r)=>(e.request.request=Object.assign({},e.request.request,{retries:t,retryAfter:r}),e)}}}At.VERSION="4.1.1";const St=()=>Promise.resolve();function Ot(e,t,r){return e.retryLimiter.schedule(Pt,e,t,r)}async function Pt(e,t,r){const s="GET"!==r.method&&"HEAD"!==r.method,{pathname:o}=new URL(r.url,"http://github.test"),n="GET"===r.method&&o.startsWith("/search/"),i=o.startsWith("/graphql"),a=~~t.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(a.expiration=6e4),(s||i)&&await e.write.key(e.id).schedule(a,St),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(a,St),n&&await e.search.key(e.id).schedule(a,St);const c=e.global.key(e.id).schedule(a,t,r);if(i){const e=await c;if(null!=e.data.errors&&e.data.errors.some((e=>"RATE_LIMITED"===e.type))){throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:e,data:e.data})}}return c}const Rt=function(e){const t=`^(?:${e.map((e=>e.split("/").map((e=>e.startsWith("{")?"(?:.+?)":e)).join("/"))).map((e=>`(?:${e})`)).join("|")})[^/]*$`;return new RegExp(t,"i")}(["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"]),Ft=Rt.test.bind(Rt),Ut={},$t=function(e,t){Ut.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),Ut.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),Ut.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),Ut.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function qt(e,t){const{enabled:r=!0,Bottleneck:s=bt,id:o="no-id",timeout:n=12e4,connection:i}=t.throttle||{};if(!r)return{};const a={connection:i,timeout:n};null==Ut.global&&$t(s,a);const c=Object.assign({clustering:null!=i,triggersNotification:Ft,minimumSecondaryRateRetryAfter:5,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...Ut},t.throttle),l="function"==typeof c.onAbuseLimit&&c.onAbuseLimit;if("function"!=typeof(l?c.onAbuseLimit:c.onSecondaryRateLimit)||"function"!=typeof c.onRateLimit)throw new Error("octokit/plugin-throttling error:\n        You must pass the onSecondaryRateLimit and onRateLimit error handlers.\n        See https://octokit.github.io/rest.js/#throttling\n\n        const octokit = new Octokit({\n          throttle: {\n            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},\n            onRateLimit: (retryAfter, options) => {/* ... */}\n          }\n        })\n    ");const u={},p=new s.Events(u);return u.on("secondary-limit",l?function(...t){return e.log.warn("[@octokit/plugin-throttling] `onAbuseLimit()` is deprecated and will be removed in a future release of `@octokit/plugin-throttling`, please use the `onSecondaryRateLimit` handler instead"),c.onAbuseLimit(...t)}:c.onSecondaryRateLimit),u.on("rate-limit",c.onRateLimit),u.on("error",(t=>e.log.warn("Error in throttling-plugin limit handler",t))),c.retryLimiter.on("failed",(async function(t,r){const[s,o,n]=r.args,{pathname:i}=new URL(n.url,"http://github.test");if(!(i.startsWith("/graphql")&&401!==t.status)&&403!==t.status)return;const a=~~o.retryCount;o.retryCount=a,n.request.retryCount=a;const{wantRetry:c,retryAfter:l=0}=await async function(){if(/\bsecondary rate\b/i.test(t.message)){const r=Math.max(~~t.response.headers["retry-after"],s.minimumSecondaryRateRetryAfter);return{wantRetry:await p.trigger("secondary-limit",r,n,e,a),retryAfter:r}}if(null!=t.response.headers&&"0"===t.response.headers["x-ratelimit-remaining"]){const r=new Date(1e3*~~t.response.headers["x-ratelimit-reset"]).getTime(),s=Math.max(Math.ceil((r-Date.now())/1e3),0);return{wantRetry:await p.trigger("rate-limit",s,n,e,a),retryAfter:s}}return{}}();return c?(o.retryCount++,l*s.retryAfterBaseValue):void 0})),e.hook.wrap("request",Ot.bind(null,c)),{}}qt.VERSION="5.0.1",qt.triggersNotification=Ft;var jt=function(e){return btoa(e)};var Ct=je(Object.freeze({__proto__:null,oauthAuthorizationUrl:function(e){const t=e.clientType||"oauth-app",r=e.baseUrl||"https://github.com",s={clientType:t,allowSignup:!1!==e.allowSignup,clientId:e.clientId,login:e.login||null,redirectUrl:e.redirectUrl||null,state:e.state||Math.random().toString(36).substr(2),url:""};if("oauth-app"===t){const t="scopes"in e?e.scopes:[];s.scopes="string"==typeof t?t.split(/[,\s]+/).filter(Boolean):t}return s.url=function(e,t){const r={allowSignup:"allow_signup",clientId:"client_id",login:"login",redirectUrl:"redirect_uri",scopes:"scope",state:"state"};let s=e;return Object.keys(r).filter((e=>null!==t[e])).filter((e=>"scopes"!==e||"github-app"!==t.clientType&&(!Array.isArray(t[e])||t[e].length>0))).map((e=>[r[e],`${t[e]}`])).forEach((([e,t],r)=>{s+=0===r?"?":"&",s+=`${e}=${encodeURIComponent(t)}`})),s}(`${r}/login/oauth/authorize`,s),s}})),It=je(Qe),xt=je(Ve);var Dt,Lt=(Dt=jt)&&"object"==typeof Dt&&"default"in Dt?Dt.default:Dt;function Ht(e){const t=e.endpoint.DEFAULTS;return/^https:\/\/(api\.)?github\.com$/.test(t.baseUrl)?"https://github.com":t.baseUrl.replace("/api/v3","")}async function Wt(e,t,r){const s={baseUrl:Ht(e),headers:{accept:"application/json"},...r},o=await e(t,s);if("error"in o.data){const r=new xt.RequestError(`${o.data.error_description} (${o.data.error}, ${o.data.error_uri})`,400,{request:e.endpoint.merge(t,s),headers:o.headers});throw r.response=o,r}return o}function zt(e,t){return new Date(e+1e3*t).toISOString()}function Nt(e,t){return new Date(e+1e3*t).toISOString()}function Bt(e,t){return new Date(e+1e3*t).toISOString()}var Mt=async function(e){const t=e.request||It.request,r=await t("POST /applications/{client_id}/token",{headers:{authorization:`basic ${Lt(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.token,scopes:r.data.scopes};return r.data.expires_at&&(s.expiresAt=r.data.expires_at),"github-app"===e.clientType&&delete s.scopes,{...r,authentication:s}},Vt=async function(e){const t=e.request||It.request,r={client_id:e.clientId};return"scopes"in e&&Array.isArray(e.scopes)&&(r.scope=e.scopes.join(" ")),Wt(t,"POST /login/device/code",r)},Kt=async function(e){return(e.request||It.request)("DELETE /applications/{client_id}/grant",{headers:{authorization:`basic ${Lt(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token})},Jt=async function(e){return(e.request||It.request)("DELETE /applications/{client_id}/token",{headers:{authorization:`basic ${Lt(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token})},Yt=async function(e){const t=e.request||It.request,r=await Wt(t,"POST /login/oauth/access_token",{client_id:e.clientId,device_code:e.code,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}),s={clientType:e.clientType,clientId:e.clientId,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("clientSecret"in e&&(s.clientSecret=e.clientSecret),"github-app"===e.clientType){if("refresh_token"in r.data){const e=new Date(r.headers.date).getTime();s.refreshToken=r.data.refresh_token,s.expiresAt=Nt(e,r.data.expires_in),s.refreshTokenExpiresAt=Nt(e,r.data.refresh_token_expires_in)}delete s.scopes}return{...r,authentication:s}},Qt=async function(e){const t=e.request||It.request,r=await Wt(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,code:e.code,redirect_uri:e.redirectUrl}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("github-app"===e.clientType){if("refresh_token"in r.data){const e=new Date(r.headers.date).getTime();s.refreshToken=r.data.refresh_token,s.expiresAt=zt(e,r.data.expires_in),s.refreshTokenExpiresAt=zt(e,r.data.refresh_token_expires_in)}delete s.scopes}return{...r,authentication:s}},Xt=function({request:e=It.request,...t}){const r=Ht(e);return Ct.oauthAuthorizationUrl({...t,baseUrl:r})},Zt=async function(e){const t=e.request||It.request,r=await Wt(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,grant_type:"refresh_token",refresh_token:e.refreshToken}),s=new Date(r.headers.date).getTime(),o={clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,refreshToken:r.data.refresh_token,expiresAt:Bt(s,r.data.expires_in),refreshTokenExpiresAt:Bt(s,r.data.refresh_token_expires_in)};return{...r,authentication:o}},er=async function(e){const t=e.request||It.request,r=Lt(`${e.clientId}:${e.clientSecret}`),s=await t("PATCH /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token}),o={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.data.token,scopes:s.data.scopes};return s.data.expires_at&&(o.expiresAt=s.data.expires_at),"github-app"===e.clientType&&delete o.scopes,{...s,authentication:o}},tr=async function(e){const{request:t,clientType:r,clientId:s,clientSecret:o,token:n,...i}=e,a=t||It.request,c=await a("POST /applications/{client_id}/token/scoped",{headers:{authorization:`basic ${Lt(`${s}:${o}`)}`},client_id:s,access_token:n,...i}),l=Object.assign({clientType:r,clientId:s,clientSecret:o,token:c.data.token},c.data.expires_at?{expiresAt:c.data.expires_at}:{});return{...c,authentication:l}},rr=Object.defineProperty({VERSION:"2.0.5",checkToken:Mt,createDeviceCode:Vt,deleteAuthorization:Kt,deleteToken:Jt,exchangeDeviceCode:Yt,exchangeWebFlowCode:Qt,getWebFlowAuthorizationUrl:Xt,refreshToken:Zt,resetToken:er,scopeToken:tr},"__esModule",{value:!0});async function sr(e,t){const r=function(e,t){if(!0===t.refresh)return!1;if(!e.authentication)return!1;if("github-app"===e.clientType)return e.authentication;const r=e.authentication,s=("scopes"in t&&t.scopes||e.scopes).join(" "),o=r.scopes.join(" ");return s===o&&r}(e,t.auth);if(r)return r;const{data:s}=await Vt({clientType:e.clientType,clientId:e.clientId,request:t.request||e.request,scopes:t.auth.scopes||e.scopes});await e.onVerification(s);const o=await nr(t.request||e.request,e.clientId,e.clientType,s);return e.authentication=o,o}async function or(e){await new Promise((t=>setTimeout(t,1e3*e)))}async function nr(e,t,r,s){try{const o={clientId:t,request:e,code:s.device_code},{authentication:n}="oauth-app"===r?await Yt({...o,clientType:"oauth-app"}):await Yt({...o,clientType:"github-app"});return{type:"token",tokenType:"oauth",...n}}catch(o){if(!o.response)throw o;const n=o.response.data.error;if("authorization_pending"===n)return await or(s.interval),nr(e,t,r,s);if("slow_down"===n)return await or(s.interval+5),nr(e,t,r,s);throw o}}async function ir(e,t){return sr(e,{auth:t})}async function ar(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);const{token:n}=await sr(e,{request:t,auth:{type:"oauth"}});return o.headers.authorization=`token ${n}`,t(o)}const cr="4.0.4";function lr(e){const t=e.request||Ye.defaults({headers:{"user-agent":`octokit-auth-oauth-device.js/${cr} ${re()}`}}),{request:r=t,...s}=e,o="github-app"===e.clientType?{...s,clientType:"github-app",request:r}:{...s,clientType:"oauth-app",request:r,scopes:e.scopes||[]};if(!e.clientId)throw new Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');if(!e.onVerification)throw new Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');return Object.assign(ir.bind(null,o),{hook:ar.bind(null,o)})}const ur="2.1.1";async function pr(e){if("code"in e.strategyOptions){const{authentication:t}=await Qt({clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request});return{type:"token",tokenType:"oauth",...t}}if("onVerification"in e.strategyOptions){const t=lr({clientType:e.clientType,clientId:e.clientId,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request}),r=await t({type:"oauth"});return{clientSecret:e.clientSecret,...r}}if("token"in e.strategyOptions)return{type:"token",tokenType:"oauth",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions};throw new Error("[@octokit/auth-oauth-user] Invalid strategy options")}async function dr(e,t={}){if(e.authentication||(e.authentication=(e.clientType,await pr(e))),e.authentication.invalid)throw new Error("[@octokit/auth-oauth-user] Token is invalid");const r=e.authentication;if("expiresAt"in r&&("refresh"===t.type||new Date(r.expiresAt)<new Date)){const{authentication:t}=await Zt({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,refreshToken:r.refreshToken,request:e.request});e.authentication={tokenType:"oauth",type:"token",...t}}if("refresh"===t.type){if("oauth-app"===e.clientType)throw new Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");if(!r.hasOwnProperty("expiresAt"))throw new Error("[@octokit/auth-oauth-user] Refresh token missing");await(e.onTokenCreated?.(e.authentication,{type:t.type}))}if("check"===t.type||"reset"===t.type){const r="check"===t.type?Mt:er;try{const{authentication:s}=await r({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request});return e.authentication={tokenType:"oauth",type:"token",...s},"reset"===t.type&&await(e.onTokenCreated?.(e.authentication,{type:t.type})),e.authentication}catch(t){throw 404===t.status&&(t.message="[@octokit/auth-oauth-user] Token is invalid",e.authentication.invalid=!0),t}}if("delete"===t.type||"deleteAuthorization"===t.type){const r="delete"===t.type?Jt:Kt;try{await r({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request})}catch(e){if(404!==e.status)throw e}return e.authentication.invalid=!0,e.authentication}return e.authentication}const hr=/\/applications\/[^/]+\/(token|grant)s?/;function gr(e){return e&&hr.test(e)}async function mr(e,t,r,s={}){const o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(gr(o.url)){const r=jt(`${e.clientId}:${e.clientSecret}`);return o.headers.authorization=`basic ${r}`,t(o)}const{token:n}=(e.clientType,await dr({...e,request:t}));return o.headers.authorization="token "+n,t(o)}function fr({clientId:e,clientSecret:t,clientType:r="oauth-app",request:s=Ye.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${ur} ${re()}`}}),onTokenCreated:o,...n}){const i=Object.assign({clientType:r,clientId:e,clientSecret:t,onTokenCreated:o,strategyOptions:n,request:s});return Object.assign(dr.bind(null,i),{hook:mr.bind(null,i)})}fr.VERSION=ur;var _r=Object.freeze({__proto__:null,createOAuthUserAuth:fr,requiresBasicAuth:gr});async function wr(e,t){if("oauth-app"===t.type)return{type:"oauth-app",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,headers:{authorization:`basic ${jt(`${e.clientId}:${e.clientSecret}`)}`}};if("factory"in t){const{type:r,...s}={...t,...e};return t.factory(s)}const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.request,...t};return(e.clientType,await fr({...r,clientType:e.clientType}))()}async function Tr(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if("github-app"===e.clientType&&!gr(o.url))throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${o.method} ${o.url}" is not supported.`);const n=jt(`${e.clientId}:${e.clientSecret}`);o.headers.authorization=`basic ${n}`;try{return await t(o)}catch(e){if(401!==e.status)throw e;throw e.message=`[@octokit/auth-oauth-app] "${o.method} ${o.url}" does not support clientId/clientSecret basic authentication.`,e}}const Er="5.0.5";function yr(e){const t=Object.assign({request:Ye.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${Er} ${re()}`}}),clientType:"oauth-app"},e);return Object.assign(wr.bind(null,t),{hook:Tr.bind(null,t)})}var br=Object.freeze({__proto__:null,createOAuthAppAuth:yr,createOAuthUserAuth:fr});function kr(e,t,r,s,o,n,i){try{var a=e[n](i),c=a.value}catch(e){return void r(e)}a.done?t(c):Promise.resolve(c).then(s,o)}function vr(e){return function(){var t=this,r=arguments;return new Promise((function(s,o){var n=e.apply(t,r);function i(e){kr(n,s,o,i,a,"next",e)}function a(e){kr(n,s,o,i,a,"throw",e)}i(void 0)}))}}function Gr(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),s=0,o=e.length;s<o;s++)r[s]=e.charCodeAt(s);return t}function Ar(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Sr(e){return Ar(btoa(JSON.stringify(e)))}var Or=function(){var e=vr((function*(e){var{privateKey:t,payload:r}=e;if(/BEGIN RSA PRIVATE KEY/.test(t))throw new Error("[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#readme");var s,o={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},n=(s=t.trim().split("\n").slice(1,-1).join(""),Gr(atob(s))),i=yield crypto.subtle.importKey("pkcs8",n,o,!1,["sign"]),a=function(e,t){return"".concat(Sr({alg:"RS256",typ:"JWT"}),".").concat(Sr(t))}(0,r),c=Gr(a),l=function(e){for(var t="",r=new Uint8Array(e),s=r.byteLength,o=0;o<s;o++)t+=String.fromCharCode(r[o]);return Ar(btoa(t))}(yield crypto.subtle.sign(o.name,i,c));return"".concat(a,".").concat(l)}));return function(t){return e.apply(this,arguments)}}();function Pr(e){return Rr.apply(this,arguments)}function Rr(){return(Rr=vr((function*(e){var{id:t,privateKey:r,now:s=Math.floor(Date.now()/1e3)}=e,o=s-30,n=o+600,i={iat:o,exp:n,iss:t};return{appId:t,expiration:n,token:yield Or({privateKey:r,payload:i})}}))).apply(this,arguments)}var Fr=Ur;function Ur(e){var t=this;if(t instanceof Ur||(t=new Ur),t.tail=null,t.head=null,t.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){t.push(e)}));else if(arguments.length>0)for(var r=0,s=arguments.length;r<s;r++)t.push(arguments[r]);return t}function $r(e,t,r){var s=t===e.head?new Cr(r,null,t,e):new Cr(r,t,t.next,e);return null===s.next&&(e.tail=s),null===s.prev&&(e.head=s),e.length++,s}function qr(e,t){e.tail=new Cr(t,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function jr(e,t){e.head=new Cr(t,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function Cr(e,t,r,s){if(!(this instanceof Cr))return new Cr(e,t,r,s);this.list=s,this.value=e,t?(t.next=this,this.prev=t):this.prev=null,r?(r.prev=this,this.next=r):this.next=null}Ur.Node=Cr,Ur.create=Ur,Ur.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var t=e.next,r=e.prev;return t&&(t.prev=r),r&&(r.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=r),e.list.length--,e.next=null,e.prev=null,e.list=null,t},Ur.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=this.head;e.list=this,e.next=t,t&&(t.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},Ur.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var t=this.tail;e.list=this,e.prev=t,t&&(t.next=e),this.tail=e,this.head||(this.head=e),this.length++}},Ur.prototype.push=function(){for(var e=0,t=arguments.length;e<t;e++)qr(this,arguments[e]);return this.length},Ur.prototype.unshift=function(){for(var e=0,t=arguments.length;e<t;e++)jr(this,arguments[e]);return this.length},Ur.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},Ur.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},Ur.prototype.forEach=function(e,t){t=t||this;for(var r=this.head,s=0;null!==r;s++)e.call(t,r.value,s,this),r=r.next},Ur.prototype.forEachReverse=function(e,t){t=t||this;for(var r=this.tail,s=this.length-1;null!==r;s--)e.call(t,r.value,s,this),r=r.prev},Ur.prototype.get=function(e){for(var t=0,r=this.head;null!==r&&t<e;t++)r=r.next;if(t===e&&null!==r)return r.value},Ur.prototype.getReverse=function(e){for(var t=0,r=this.tail;null!==r&&t<e;t++)r=r.prev;if(t===e&&null!==r)return r.value},Ur.prototype.map=function(e,t){t=t||this;for(var r=new Ur,s=this.head;null!==s;)r.push(e.call(t,s.value,this)),s=s.next;return r},Ur.prototype.mapReverse=function(e,t){t=t||this;for(var r=new Ur,s=this.tail;null!==s;)r.push(e.call(t,s.value,this)),s=s.prev;return r},Ur.prototype.reduce=function(e,t){var r,s=this.head;if(arguments.length>1)r=t;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");s=this.head.next,r=this.head.value}for(var o=0;null!==s;o++)r=e(r,s.value,o),s=s.next;return r},Ur.prototype.reduceReverse=function(e,t){var r,s=this.tail;if(arguments.length>1)r=t;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");s=this.tail.prev,r=this.tail.value}for(var o=this.length-1;null!==s;o--)r=e(r,s.value,o),s=s.prev;return r},Ur.prototype.toArray=function(){for(var e=new Array(this.length),t=0,r=this.head;null!==r;t++)e[t]=r.value,r=r.next;return e},Ur.prototype.toArrayReverse=function(){for(var e=new Array(this.length),t=0,r=this.tail;null!==r;t++)e[t]=r.value,r=r.prev;return e},Ur.prototype.slice=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var r=new Ur;if(t<e||t<0)return r;e<0&&(e=0),t>this.length&&(t=this.length);for(var s=0,o=this.head;null!==o&&s<e;s++)o=o.next;for(;null!==o&&s<t;s++,o=o.next)r.push(o.value);return r},Ur.prototype.sliceReverse=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var r=new Ur;if(t<e||t<0)return r;e<0&&(e=0),t>this.length&&(t=this.length);for(var s=this.length,o=this.tail;null!==o&&s>t;s--)o=o.prev;for(;null!==o&&s>e;s--,o=o.prev)r.push(o.value);return r},Ur.prototype.splice=function(e,t,...r){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var s=0,o=this.head;null!==o&&s<e;s++)o=o.next;var n=[];for(s=0;o&&s<t;s++)n.push(o.value),o=this.removeNode(o);null===o&&(o=this.tail),o!==this.head&&o!==this.tail&&(o=o.prev);for(s=0;s<r.length;s++)o=$r(this,o,r[s]);return n},Ur.prototype.reverse=function(){for(var e=this.head,t=this.tail,r=e;null!==r;r=r.prev){var s=r.prev;r.prev=r.next,r.next=s}return this.head=t,this.tail=e,this};try{!function(e){e.prototype[Symbol.iterator]=function*(){for(let e=this.head;e;e=e.next)yield e.value}}(Ur)}catch(e){}const Ir=Symbol("max"),xr=Symbol("length"),Dr=Symbol("lengthCalculator"),Lr=Symbol("allowStale"),Hr=Symbol("maxAge"),Wr=Symbol("dispose"),zr=Symbol("noDisposeOnSet"),Nr=Symbol("lruList"),Br=Symbol("cache"),Mr=Symbol("updateAgeOnGet"),Vr=()=>1;const Kr=(e,t,r)=>{const s=e[Br].get(t);if(s){const t=s.value;if(Jr(e,t)){if(Qr(e,s),!e[Lr])return}else r&&(e[Mr]&&(s.value.now=Date.now()),e[Nr].unshiftNode(s));return t.value}},Jr=(e,t)=>{if(!t||!t.maxAge&&!e[Hr])return!1;const r=Date.now()-t.now;return t.maxAge?r>t.maxAge:e[Hr]&&r>e[Hr]},Yr=e=>{if(e[xr]>e[Ir])for(let t=e[Nr].tail;e[xr]>e[Ir]&&null!==t;){const r=t.prev;Qr(e,t),t=r}},Qr=(e,t)=>{if(t){const r=t.value;e[Wr]&&e[Wr](r.key,r.value),e[xr]-=r.length,e[Br].delete(r.key),e[Nr].removeNode(t)}};class Xr{constructor(e,t,r,s,o){this.key=e,this.value=t,this.length=r,this.now=s,this.maxAge=o||0}}const Zr=(e,t,r,s)=>{let o=r.value;Jr(e,o)&&(Qr(e,r),e[Lr]||(o=void 0)),o&&t.call(s,o.value,o.key,e)};var es=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[Ir]=e.max||1/0;const t=e.length||Vr;if(this[Dr]="function"!=typeof t?Vr:t,this[Lr]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[Hr]=e.maxAge||0,this[Wr]=e.dispose,this[zr]=e.noDisposeOnSet||!1,this[Mr]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[Ir]=e||1/0,Yr(this)}get max(){return this[Ir]}set allowStale(e){this[Lr]=!!e}get allowStale(){return this[Lr]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[Hr]=e,Yr(this)}get maxAge(){return this[Hr]}set lengthCalculator(e){"function"!=typeof e&&(e=Vr),e!==this[Dr]&&(this[Dr]=e,this[xr]=0,this[Nr].forEach((e=>{e.length=this[Dr](e.value,e.key),this[xr]+=e.length}))),Yr(this)}get lengthCalculator(){return this[Dr]}get length(){return this[xr]}get itemCount(){return this[Nr].length}rforEach(e,t){t=t||this;for(let r=this[Nr].tail;null!==r;){const s=r.prev;Zr(this,e,r,t),r=s}}forEach(e,t){t=t||this;for(let r=this[Nr].head;null!==r;){const s=r.next;Zr(this,e,r,t),r=s}}keys(){return this[Nr].toArray().map((e=>e.key))}values(){return this[Nr].toArray().map((e=>e.value))}reset(){this[Wr]&&this[Nr]&&this[Nr].length&&this[Nr].forEach((e=>this[Wr](e.key,e.value))),this[Br]=new Map,this[Nr]=new Fr,this[xr]=0}dump(){return this[Nr].map((e=>!Jr(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[Nr]}set(e,t,r){if((r=r||this[Hr])&&"number"!=typeof r)throw new TypeError("maxAge must be a number");const s=r?Date.now():0,o=this[Dr](t,e);if(this[Br].has(e)){if(o>this[Ir])return Qr(this,this[Br].get(e)),!1;const n=this[Br].get(e).value;return this[Wr]&&(this[zr]||this[Wr](e,n.value)),n.now=s,n.maxAge=r,n.value=t,this[xr]+=o-n.length,n.length=o,this.get(e),Yr(this),!0}const n=new Xr(e,t,o,s,r);return n.length>this[Ir]?(this[Wr]&&this[Wr](e,t),!1):(this[xr]+=n.length,this[Nr].unshift(n),this[Br].set(e,this[Nr].head),Yr(this),!0)}has(e){if(!this[Br].has(e))return!1;const t=this[Br].get(e).value;return!Jr(this,t)}get(e){return Kr(this,e,!0)}peek(e){return Kr(this,e,!1)}pop(){const e=this[Nr].tail;return e?(Qr(this,e),e.value):null}del(e){Qr(this,this[Br].get(e))}load(e){this.reset();const t=Date.now();for(let r=e.length-1;r>=0;r--){const s=e[r],o=s.e||0;if(0===o)this.set(s.k,s.v);else{const e=o-t;e>0&&this.set(s.k,s.v,e)}}}prune(){this[Br].forEach(((e,t)=>Kr(this,t,!1)))}};async function ts({appId:e,privateKey:t,timeDifference:r}){try{const s=await Pr({id:+e,privateKey:t,now:r&&Math.floor(Date.now()/1e3)+r});return{type:"app",token:s.token,appId:s.appId,expiresAt:new Date(1e3*s.expiration).toISOString()}}catch(e){throw"-----BEGIN RSA PRIVATE KEY-----"===t?new Error("The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\n'"):e}}function rs({installationId:e,permissions:t={},repositoryIds:r=[],repositoryNames:s=[]}){const o=Object.keys(t).sort().map((e=>"read"===t[e]?e:`${e}!`)).join(",");return[e,r.sort().join(","),s.join(","),o].filter(Boolean).join("|")}function ss({installationId:e,token:t,createdAt:r,expiresAt:s,repositorySelection:o,permissions:n,repositoryIds:i,repositoryNames:a,singleFileName:c}){return Object.assign({type:"token",tokenType:"installation",token:t,installationId:e,permissions:n,createdAt:r,expiresAt:s,repositorySelection:o},i?{repositoryIds:i}:null,a?{repositoryNames:a}:null,c?{singleFileName:c}:null)}async function os(e,t,r){const s=Number(t.installationId||e.installationId);if(!s)throw new Error("[@octokit/auth-app] installationId option is required for installation authentication.");if(t.factory){const{type:r,factory:s,oauthApp:o,...n}={...e,...t};return s(n)}const o=Object.assign({installationId:s},t);if(!t.refresh){const t=await async function(e,t){const r=rs(t),s=await e.get(r);if(!s)return;const[o,n,i,a,c,l]=s.split("|");return{token:o,createdAt:n,expiresAt:i,permissions:t.permissions||c.split(/,/).reduce(((e,t)=>(/!$/.test(t)?e[t.slice(0,-1)]="write":e[t]="read",e)),{}),repositoryIds:t.repositoryIds,repositoryNames:t.repositoryNames,singleFileName:l,repositorySelection:a}}(e.cache,o);if(t){const{token:e,createdAt:r,expiresAt:o,permissions:n,repositoryIds:i,repositoryNames:a,singleFileName:c,repositorySelection:l}=t;return ss({installationId:s,token:e,createdAt:r,expiresAt:o,permissions:n,repositorySelection:l,repositoryIds:i,repositoryNames:a,singleFileName:c})}}const n=await ts(e),i=r||e.request,{data:{token:a,expires_at:c,repositories:l,permissions:u,repository_selection:p,single_file:d}}=await i("POST /app/installations/{installation_id}/access_tokens",{installation_id:s,repository_ids:t.repositoryIds,repositories:t.repositoryNames,permissions:t.permissions,mediaType:{previews:["machine-man"]},headers:{authorization:`bearer ${n.token}`}}),h=u||{},g=p||"all",m=l?l.map((e=>e.id)):void 0,f=l?l.map((e=>e.name)):void 0,_=(new Date).toISOString();return await async function(e,t,r){const s=rs(t),o=t.permissions?"":Object.keys(r.permissions).map((e=>`${e}${"write"===r.permissions[e]?"!":""}`)).join(","),n=[r.token,r.createdAt,r.expiresAt,r.repositorySelection,o,r.singleFileName].join("|");await e.set(s,n)}(e.cache,o,{token:a,createdAt:_,expiresAt:c,repositorySelection:g,permissions:h,repositoryIds:m,repositoryNames:f,singleFileName:d}),ss({installationId:s,token:a,createdAt:_,expiresAt:c,repositorySelection:g,permissions:h,repositoryIds:m,repositoryNames:f,singleFileName:d})}async function ns(e,t){switch(t.type){case"app":return ts(e);case"oauth":e.log.warn(new xe('[@octokit/auth-app] {type: "oauth"} is deprecated. Use {type: "oauth-app"} instead'));case"oauth-app":return e.oauthApp({type:"oauth-app"});case"installation":return os(e,{...t,type:"installation"});case"oauth-user":return e.oauthApp(t);default:throw new Error(`Invalid auth type: ${t.type}`)}}const is=function(e){const t=`^(?:${e.map((e=>e.split("/").map((e=>e.startsWith("{")?"(?:.+?)":e)).join("/"))).map((e=>`(?:${e})`)).join("|")})[^/]*$`;return new RegExp(t,"i")}(["/app","/app/hook/config","/app/hook/deliveries","/app/hook/deliveries/{delivery_id}","/app/hook/deliveries/{delivery_id}/attempts","/app/installations","/app/installations/{installation_id}","/app/installations/{installation_id}/access_tokens","/app/installations/{installation_id}/suspended","/marketplace_listing/accounts/{account_id}","/marketplace_listing/plan","/marketplace_listing/plans","/marketplace_listing/plans/{plan_id}/accounts","/marketplace_listing/stubbed/accounts/{account_id}","/marketplace_listing/stubbed/plan","/marketplace_listing/stubbed/plans","/marketplace_listing/stubbed/plans/{plan_id}/accounts","/orgs/{org}/installation","/repos/{owner}/{repo}/installation","/users/{username}/installation"]);const as=5e3;async function cs(e,t,r,s){const o=t.endpoint.merge(r,s),n=o.url;if(/\/login\/oauth\/access_token$/.test(n))return t(o);if(function(e){return!!e&&is.test(e)}(n.replace(t.endpoint.DEFAULTS.baseUrl,""))){const{token:r}=await ts(e);let s;o.headers.authorization=`bearer ${r}`;try{s=await t(o)}catch(r){if(function(e){return!(e.message.match(/'Expiration time' claim \('exp'\) must be a numeric value representing the future time at which the assertion expires/)||e.message.match(/'Issued at' claim \('iat'\) must be an Integer representing the time that the assertion was issued/))}(r))throw r;if(void 0===r.response.headers.date)throw r;const s=Math.floor((Date.parse(r.response.headers.date)-Date.parse((new Date).toString()))/1e3);e.log.warn(r.message),e.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${s} seconds. Retrying request with the difference accounted for.`);const{token:n}=await ts({...e,timeDifference:s});return o.headers.authorization=`bearer ${n}`,t(o)}return s}if(gr(n)){const r=await e.oauthApp({type:"oauth-app"});return o.headers.authorization=r.headers.authorization,t(o)}const{token:i,createdAt:a}=await os(e,{},t);return o.headers.authorization=`token ${i}`,ls(e,t,o,a)}async function ls(e,t,r,s,o=0){const n=+new Date-+new Date(s);try{return await t(r)}catch(i){if(401!==i.status)throw i;if(n>=as)throw o>0&&(i.message=`After ${o} retries within ${n/1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`),i;const a=1e3*++o;return e.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${o}, wait: ${a/1e3}s)`),await new Promise((e=>setTimeout(e,a))),ls(e,t,r,s,o)}}const us="4.0.9";var ps=Object.freeze({__proto__:null,createAppAuth:function(e){if(!e.appId)throw new Error("[@octokit/auth-app] appId option is required");if(!Number.isFinite(+e.appId))throw new Error("[@octokit/auth-app] appId option must be a number or numeric string");if(!e.privateKey)throw new Error("[@octokit/auth-app] privateKey option is required");if("installationId"in e&&!e.installationId)throw new Error("[@octokit/auth-app] installationId is set to a falsy value");const t=Object.assign({warn:console.warn.bind(console)},e.log),r=e.request||Ye.defaults({headers:{"user-agent":`octokit-auth-app.js/${us} ${re()}`}}),s=Object.assign({request:r,cache:new es({max:15e3,maxAge:354e4})},e,e.installationId?{installationId:Number(e.installationId)}:{},{log:t,oauthApp:yr({clientType:"github-app",clientId:e.clientId||"",clientSecret:e.clientSecret||"",request:r})});return Object.assign(ns.bind(null,s),{hook:cs.bind(null,s)})},createOAuthUserAuth:fr});async function ds(e){return{type:"unauthenticated",reason:e}}const hs=/\babuse\b/i;async function gs(e,t,r,s){const o=t.endpoint.merge(r,s);return t(o).catch((t=>{if(404===t.status)throw t.message=`Not found. May be due to lack of authentication. Reason: ${e}`,t;if(function(e){return 403===e.status&&!!e.response&&"0"===e.response.headers["x-ratelimit-remaining"]}(t))throw t.message=`API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${e}`,t;if(function(e){return 403===e.status&&hs.test(e.message)}(t))throw t.message=`You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${e}`,t;if(401===t.status)throw t.message=`Unauthorized. "${o.method} ${o.url}" failed most likely due to lack of authentication. Reason: ${e}`,t;throw t.status>=400&&t.status<500&&(t.message=t.message.replace(/\.?$/,`. May be caused by lack of authentication (${e}).`)),t}))}var ms=Object.freeze({__proto__:null,createUnauthenticatedAuth:function(e){if(!e||!e.reason)throw new Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");return Object.assign(ds.bind(null,e.reason),{hook:gs.bind(null,e.reason)})}}),fs=je(br),_s=je(pt),ws=je(se),Ts=je(_r),Es=rr,ys=je(ms);
/*! fromentries. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var bs=function(e){return e&&"object"==typeof e&&"default"in e?e.default:e}((function(e){return[...e].reduce(((e,[t,r])=>(e[t]=r,e)),{})}));const ks="4.2.0";function vs(e,t,r){if(Array.isArray(t))for(const s of t)vs(e,s,r);else e.eventHandlers[t]||(e.eventHandlers[t]=[]),e.eventHandlers[t].push(r)}const Gs=_s.Octokit.defaults({userAgent:`octokit-oauth-app.js/${ks} ${ws.getUserAgent()}`});async function As(e,t){const{name:r,action:s}=t;if(e.eventHandlers[`${r}.${s}`])for(const o of e.eventHandlers[`${r}.${s}`])await o(t);if(e.eventHandlers[r])for(const s of e.eventHandlers[r])await s(t)}async function Ss(e,t){return e.octokit.auth({type:"oauth-user",...t,async factory(t){const r=new e.Octokit({authStrategy:Ts.createOAuthUserAuth,auth:t}),s=await r.auth({type:"get"});return await As(e,{name:"token",action:"created",token:s.token,scopes:s.scopes,authentication:s,octokit:r}),r}})}function Os(e,t){let r;r=void 0===t.allowSignup&&void 0===e.allowSignup||(void 0===t.allowSignup&&void 0!==e.allowSignup?e.allowSignup:void 0===e.allowSignup&&void 0!==t.allowSignup?t.allowSignup:t.allowSignup||e.allowSignup);const s={clientId:e.clientId,request:e.octokit.request,...t,allowSignup:r,redirectUrl:t.redirectUrl||e.redirectUrl,scopes:t.scopes||e.defaultScopes};return Es.getWebFlowAuthorizationUrl({clientType:e.clientType,...s})}async function Ps(e,t){const r=await e.octokit.auth({type:"oauth-user",...t});return await As(e,{name:"token",action:"created",token:r.token,scopes:r.scopes,authentication:r,octokit:new e.Octokit({authStrategy:fs.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.token,scopes:r.scopes,refreshToken:r.refreshToken,expiresAt:r.expiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}})}),{authentication:r}}async function Rs(e,t){const r=await Es.checkToken({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t});return Object.assign(r.authentication,{type:"token",tokenType:"oauth"}),r}async function Fs(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t};if("oauth-app"===e.clientType){const t=await Es.resetToken({clientType:"oauth-app",...r}),s=Object.assign(t.authentication,{type:"token",tokenType:"oauth"});return await As(e,{name:"token",action:"reset",token:t.authentication.token,scopes:t.authentication.scopes||void 0,authentication:s,octokit:new e.Octokit({authStrategy:Ts.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:t.authentication.token,scopes:t.authentication.scopes}})}),{...t,authentication:s}}const s=await Es.resetToken({clientType:"github-app",...r}),o=Object.assign(s.authentication,{type:"token",tokenType:"oauth"});return await As(e,{name:"token",action:"reset",token:s.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:Ts.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.authentication.token}})}),{...s,authentication:o}}async function Us(e,t){if("oauth-app"===e.clientType)throw new Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");const r=await Es.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,refreshToken:t.refreshToken}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await As(e,{name:"token",action:"refreshed",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:Ts.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}async function $s(e,t){if("oauth-app"===e.clientType)throw new Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");const r=await Es.scopeToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await As(e,{name:"token",action:"scoped",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:Ts.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}async function qs(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s="oauth-app"===e.clientType?await Es.deleteToken({clientType:"oauth-app",...r}):await Es.deleteToken({clientType:"github-app",...r});return await As(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:ys.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),s}async function js(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s="oauth-app"===e.clientType?await Es.deleteAuthorization({clientType:"oauth-app",...r}):await Es.deleteAuthorization({clientType:"github-app",...r});return await As(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:ys.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),await As(e,{name:"authorization",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:ys.createUnauthenticatedAuth,auth:{reason:'Handling "authorization.deleted" event. The access for the app has been revoked.'}})}),s}async function Cs(e,{pathPrefix:t="/api/github/oauth"},r){if("OPTIONS"===r.method)return{status:200,headers:{"access-control-allow-origin":"*","access-control-allow-methods":"*","access-control-allow-headers":"Content-Type, User-Agent, Authorization"}};const{pathname:s}=new URL(r.url,"http://localhost"),o=[r.method,s].join(" "),n={getLogin:`GET ${t}/login`,getCallback:`GET ${t}/callback`,createToken:`POST ${t}/token`,getToken:`GET ${t}/token`,patchToken:`PATCH ${t}/token`,patchRefreshToken:`PATCH ${t}/refresh-token`,scopeToken:`POST ${t}/token/scoped`,deleteToken:`DELETE ${t}/token`,deleteGrant:`DELETE ${t}/grant`};if(!Object.values(n).includes(o))return null;let i;try{const e=await r.text();i=e?JSON.parse(e):{}}catch(e){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:"[@octokit/oauth-app] request error"})}}const{searchParams:a}=new URL(r.url,"http://localhost"),c=bs(a),l=r.headers;try{var u;if(o===n.getLogin){const{url:t}=e.getWebFlowAuthorizationUrl({state:c.state,scopes:c.scopes?c.scopes.split(","):void 0,allowSignup:c.allowSignup?"true"===c.allowSignup:void 0,redirectUrl:c.redirectUrl});return{status:302,headers:{location:t}}}if(o===n.getCallback){if(c.error)throw new Error(`[@octokit/oauth-app] ${c.error} ${c.error_description}`);if(!c.code)throw new Error('[@octokit/oauth-app] "code" parameter is required');const{authentication:{token:t}}=await e.createToken({code:c.code});return{status:200,headers:{"content-type":"text/html"},text:`<h1>Token created successfully</h1>\n    \n<p>Your token is: <strong>${t}</strong>. Copy it now as it cannot be shown again.</p>`}}if(o===n.createToken){const{code:t,redirectUrl:r}=i;if(!t)throw new Error('[@octokit/oauth-app] "code" parameter is required');const s=await e.createToken({code:t,redirectUrl:r});return delete s.authentication.clientSecret,{status:201,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(s)}}if(o===n.getToken){var p;const t=null===(p=l.authorization)||void 0===p?void 0:p.substr("token ".length);if(!t)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const r=await e.checkToken({token:t});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(o===n.patchToken){var d;const t=null===(d=l.authorization)||void 0===d?void 0:d.substr("token ".length);if(!t)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const r=await e.resetToken({token:t});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(o===n.patchRefreshToken){var h;if(!(null===(h=l.authorization)||void 0===h?void 0:h.substr("token ".length)))throw new Error('[@octokit/oauth-app] "Authorization" header is required');const{refreshToken:t}=i;if(!t)throw new Error("[@octokit/oauth-app] refreshToken must be sent in request body");const r=await e.refreshToken({refreshToken:t});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(o===n.scopeToken){var g;const t=null===(g=l.authorization)||void 0===g?void 0:g.substr("token ".length);if(!t)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const r=await e.scopeToken({token:t,...i});return delete r.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(r)}}if(o===n.deleteToken){var m;const t=null===(m=l.authorization)||void 0===m?void 0:m.substr("token ".length);if(!t)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteToken({token:t}),{status:204,headers:{"access-control-allow-origin":"*"}}}const t=null===(u=l.authorization)||void 0===u?void 0:u.substr("token ".length);if(!t)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteAuthorization({token:t}),{status:204,headers:{"access-control-allow-origin":"*"}}}catch(e){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:e.message})}}}function Is(e){const{method:t,url:r,headers:s}=e;return{method:t,url:r,headers:s,text:async function(){return await new Promise(((t,r)=>{let s=[];e.on("error",r).on("data",(e=>s.push(e))).on("end",(()=>t(Buffer.concat(s).toString())))}))}}}function xs(e,t){t.writeHead(e.status,e.headers),t.end(e.text)}function Ds(e){return{status:404,headers:{"content-type":"application/json"},text:JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`})}}function Ls(e,t){xs(Ds(Is(e)),t)}function Hs(e){const t=Object.fromEntries(e.headers.entries());return{method:e.method,url:e.url,headers:t,text:()=>e.text()}}function Ws(e){return new Response(e.text,{status:e.status,headers:e.headers})}async function zs(e){return Ws(Ds(Hs(e)))}function Ns(e,{pathPrefix:t,onUnhandledRequest:r}={}){return r&&e.octokit.log.warn("[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version."),r??(r=zs),async function(s){const o=Hs(s),n=await Cs(e,{pathPrefix:t},o);return n?Ws(n):await r(s)}}function Bs(e){const{method:t}=e.requestContext.http;let r=e.rawPath;const{stage:s}=e.requestContext;r.startsWith("/"+s)&&(r=r.substring(s.length+1)),e.rawQueryString&&(r+="?"+e.rawQueryString);return{method:t,url:r,headers:e.headers,text:async()=>e.body||""}}function Ms(e){return{statusCode:e.status,headers:e.headers,body:e.text}}async function Vs(e){return Ms(Ds(Bs(e)))}class Ks{static defaults(e){return class extends(this){constructor(...t){super({...e,...t[0]})}}}constructor(e){const t=e.Octokit||Gs;this.type=e.clientType||"oauth-app";const r=new t({authStrategy:fs.createOAuthAppAuth,auth:{clientType:this.type,clientId:e.clientId,clientSecret:e.clientSecret}}),s={clientType:this.type,clientId:e.clientId,clientSecret:e.clientSecret,defaultScopes:e.defaultScopes||[],allowSignup:e.allowSignup,baseUrl:e.baseUrl,redirectUrl:e.redirectUrl,log:e.log,Octokit:t,octokit:r,eventHandlers:{}};this.on=vs.bind(null,s),this.octokit=r,this.getUserOctokit=Ss.bind(null,s),this.getWebFlowAuthorizationUrl=Os.bind(null,s),this.createToken=Ps.bind(null,s),this.checkToken=Rs.bind(null,s),this.resetToken=Fs.bind(null,s),this.refreshToken=Us.bind(null,s),this.scopeToken=$s.bind(null,s),this.deleteToken=qs.bind(null,s),this.deleteAuthorization=js.bind(null,s)}}Ks.VERSION=ks;var Js=Ks,Ys=function(e,{pathPrefix:t,onUnhandledRequest:r}={}){return r&&e.octokit.log.warn("[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version."),r??(r=Vs),async function(s){const o=Bs(s),n=await Cs(e,{pathPrefix:t},o);return n?Ms(n):r(s)}},Qs=function(...e){return e[0].octokit.log.warn("[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead"),Ns(...e)},Xs=function(e,{pathPrefix:t,onUnhandledRequest:r}={}){return r&&e.octokit.log.warn("[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version."),r??(r=Ls),async function(s,o,n){const i=Is(s),a=await Cs(e,{pathPrefix:t},i);a?xs(a,o):"function"==typeof n?n():r(s,o)}},Zs=Ns,eo=Cs,to=Object.defineProperty({OAuthApp:Js,createAWSLambdaAPIGatewayV2Handler:Ys,createCloudflareHandler:Qs,createNodeMiddleware:Xs,createWebWorkerHandler:Zs,handleRequest:eo},"__esModule",{value:!0}),ro=je(Object.freeze({__proto__:null,default:{}}));const so=/\s+at.*(?:\(|\s)(.*)\)?/,oo=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,no=void 0===ro.homedir?"":ro.homedir();class io extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError("Expected input to be an Array, got "+typeof e);let t=(e=[...e].map((e=>e instanceof Error?e:null!==e&&"object"==typeof e?Object.assign(new Error(e.message),e):new Error(e)))).map((e=>{return"string"==typeof e.stack?(e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""))((t=e.stack,r=Object.assign({pretty:!1},r),t.replace(/\\/g,"/").split("\n").filter((e=>{const t=e.match(so);if(null===t||!t[1])return!0;const r=t[1];return!r.includes(".app/Contents/Resources/electron.asar")&&!r.includes(".app/Contents/Resources/default_app.asar")&&!oo.test(r)})).filter((e=>""!==e.trim())).map((e=>r.pretty?e.replace(so,((e,t)=>e.replace(t,t.replace(no,"~")))):e)).join("\n"))):String(e);var t,r})).join("\n");t="\n"+((e,t=1,r)=>{if(r={indent:" ",includeEmptyLines:!1,...r},"string"!=typeof e)throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if("number"!=typeof t)throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``);if("string"!=typeof r.indent)throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);if(0===t)return e;const s=r.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return e.replace(s,r.indent.repeat(t))})(t,4),super(t),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:e})}*[Symbol.iterator](){for(const e of this._errors)yield e}}var ao,co=io;!function(e){e.SHA1="sha1",e.SHA256="sha256"}(ao||(ao={}));const lo=e=>e.startsWith("sha256=")?"sha256":"sha1",uo=new TextEncoder;function po(e){return{[ao.SHA1]:"SHA-1",[ao.SHA256]:"SHA-256"}[e]}async function ho(e,t){return crypto.subtle.importKey("raw",uo.encode(e),{name:"HMAC",hash:{name:po(t)}},!1,["sign","verify"])}async function go(e,t){const{secret:r,algorithm:s}="object"==typeof e?{secret:e.secret,algorithm:e.algorithm||ao.SHA256}:{secret:e,algorithm:ao.SHA256};if(!r||!t)throw new TypeError("[@octokit/webhooks-methods] secret & payload required for sign()");if(!Object.values(ao).includes(s))throw new TypeError(`[@octokit/webhooks] Algorithm ${s} is not supported. Must be  'sha1' or 'sha256'`);return`${s}=${function(e){return Array.prototype.map.call(new Uint8Array(e),(e=>e.toString(16).padStart(2,"0"))).join("")}(await crypto.subtle.sign("HMAC",await ho(r,s),uo.encode(t)))}`}async function mo(e,t,r){if(!e||!t||!r)throw new TypeError("[@octokit/webhooks-methods] secret, eventPayload & signature required");const s=lo(r);return await crypto.subtle.verify("HMAC",await ho(e,s),function(e){const t=e.match(/[\dA-F]{2}/gi).map((function(e){return parseInt(e,16)}));return new Uint8Array(t)}(r.replace(`${s}=`,"")),uo.encode(t))}const fo=e=>({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console),...e}),_o=["branch_protection_rule","branch_protection_rule.created","branch_protection_rule.deleted","branch_protection_rule.edited","check_run","check_run.completed","check_run.created","check_run.requested_action","check_run.rerequested","check_suite","check_suite.completed","check_suite.requested","check_suite.rerequested","code_scanning_alert","code_scanning_alert.appeared_in_branch","code_scanning_alert.closed_by_user","code_scanning_alert.created","code_scanning_alert.fixed","code_scanning_alert.reopened","code_scanning_alert.reopened_by_user","commit_comment","commit_comment.created","create","delete","dependabot_alert","dependabot_alert.created","dependabot_alert.dismissed","dependabot_alert.fixed","dependabot_alert.reintroduced","dependabot_alert.reopened","deploy_key","deploy_key.created","deploy_key.deleted","deployment","deployment.created","deployment_status","deployment_status.created","discussion","discussion.answered","discussion.category_changed","discussion.created","discussion.deleted","discussion.edited","discussion.labeled","discussion.locked","discussion.pinned","discussion.transferred","discussion.unanswered","discussion.unlabeled","discussion.unlocked","discussion.unpinned","discussion_comment","discussion_comment.created","discussion_comment.deleted","discussion_comment.edited","fork","github_app_authorization","github_app_authorization.revoked","gollum","installation","installation.created","installation.deleted","installation.new_permissions_accepted","installation.suspend","installation.unsuspend","installation_repositories","installation_repositories.added","installation_repositories.removed","installation_target","installation_target.renamed","issue_comment","issue_comment.created","issue_comment.deleted","issue_comment.edited","issues","issues.assigned","issues.closed","issues.deleted","issues.demilestoned","issues.edited","issues.labeled","issues.locked","issues.milestoned","issues.opened","issues.pinned","issues.reopened","issues.transferred","issues.unassigned","issues.unlabeled","issues.unlocked","issues.unpinned","label","label.created","label.deleted","label.edited","marketplace_purchase","marketplace_purchase.cancelled","marketplace_purchase.changed","marketplace_purchase.pending_change","marketplace_purchase.pending_change_cancelled","marketplace_purchase.purchased","member","member.added","member.edited","member.removed","membership","membership.added","membership.removed","merge_group","merge_group.checks_requested","meta","meta.deleted","milestone","milestone.closed","milestone.created","milestone.deleted","milestone.edited","milestone.opened","org_block","org_block.blocked","org_block.unblocked","organization","organization.deleted","organization.member_added","organization.member_invited","organization.member_removed","organization.renamed","package","package.published","package.updated","page_build","ping","project","project.closed","project.created","project.deleted","project.edited","project.reopened","project_card","project_card.converted","project_card.created","project_card.deleted","project_card.edited","project_card.moved","project_column","project_column.created","project_column.deleted","project_column.edited","project_column.moved","projects_v2_item","projects_v2_item.archived","projects_v2_item.converted","projects_v2_item.created","projects_v2_item.deleted","projects_v2_item.edited","projects_v2_item.reordered","projects_v2_item.restored","public","pull_request","pull_request.assigned","pull_request.auto_merge_disabled","pull_request.auto_merge_enabled","pull_request.closed","pull_request.converted_to_draft","pull_request.dequeued","pull_request.edited","pull_request.labeled","pull_request.locked","pull_request.opened","pull_request.queued","pull_request.ready_for_review","pull_request.reopened","pull_request.review_request_removed","pull_request.review_requested","pull_request.synchronize","pull_request.unassigned","pull_request.unlabeled","pull_request.unlocked","pull_request_review","pull_request_review.dismissed","pull_request_review.edited","pull_request_review.submitted","pull_request_review_comment","pull_request_review_comment.created","pull_request_review_comment.deleted","pull_request_review_comment.edited","pull_request_review_thread","pull_request_review_thread.resolved","pull_request_review_thread.unresolved","push","registry_package","registry_package.published","registry_package.updated","release","release.created","release.deleted","release.edited","release.prereleased","release.published","release.released","release.unpublished","repository","repository.archived","repository.created","repository.deleted","repository.edited","repository.privatized","repository.publicized","repository.renamed","repository.transferred","repository.unarchived","repository_dispatch","repository_import","repository_vulnerability_alert","repository_vulnerability_alert.create","repository_vulnerability_alert.dismiss","repository_vulnerability_alert.reopen","repository_vulnerability_alert.resolve","secret_scanning_alert","secret_scanning_alert.created","secret_scanning_alert.reopened","secret_scanning_alert.resolved","security_advisory","security_advisory.performed","security_advisory.published","security_advisory.updated","security_advisory.withdrawn","sponsorship","sponsorship.cancelled","sponsorship.created","sponsorship.edited","sponsorship.pending_cancellation","sponsorship.pending_tier_change","sponsorship.tier_changed","star","star.created","star.deleted","status","team","team.added_to_repository","team.created","team.deleted","team.edited","team.removed_from_repository","team_add","watch","watch.started","workflow_dispatch","workflow_job","workflow_job.completed","workflow_job.in_progress","workflow_job.queued","workflow_run","workflow_run.completed","workflow_run.in_progress","workflow_run.requested"];function wo(e,t,r){e.hooks[t]||(e.hooks[t]=[]),e.hooks[t].push(r)}function To(e,t,r){if(Array.isArray(t))t.forEach((t=>To(e,t,r)));else{if(["*","error"].includes(t)){const e="*"===t?"any":t,r=`Using the "${t}" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${e.charAt(0).toUpperCase()+e.slice(1)}() method instead`;throw new Error(r)}_o.includes(t)||e.log.warn(`"${t}" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`),wo(e,t,r)}}function Eo(e,t){wo(e,"*",t)}function yo(e,t){wo(e,"error",t)}function bo(e,t){let r;try{r=e(t)}catch(t){console.log('FATAL: Error occurred in "error" event handler'),console.log(t)}r&&r.catch&&r.catch((e=>{console.log('FATAL: Error occurred in "error" event handler'),console.log(e)}))}function ko(e,t){const r=e.hooks.error||[];if(t instanceof Error){const e=Object.assign(new co([t]),{event:t,errors:[t]});return r.forEach((t=>bo(t,e))),Promise.reject(e)}if(!t||!t.name)throw new co(["Event name not passed"]);if(!t.payload)throw new co(["Event payload not passed"]);const s=function(e,t,r){const s=[e.hooks[r],e.hooks["*"]];return t&&s.unshift(e.hooks[`${r}.${t}`]),[].concat(...s.filter(Boolean))}(e,"action"in t.payload?t.payload.action:null,t.name);if(0===s.length)return Promise.resolve();const o=[],n=s.map((r=>{let s=Promise.resolve(t);return e.transform&&(s=s.then(e.transform)),s.then((e=>r(e))).catch((e=>o.push(Object.assign(e,{event:t}))))}));return Promise.all(n).then((()=>{if(0===o.length)return;const e=new co(o);throw Object.assign(e,{event:t,errors:o}),r.forEach((t=>bo(t,e))),e}))}function vo(e,t,r){if(Array.isArray(t))t.forEach((t=>vo(e,t,r)));else if(e.hooks[t])for(let s=e.hooks[t].length-1;s>=0;s--)if(e.hooks[t][s]===r)return void e.hooks[t].splice(s,1)}function Go(e){const t={hooks:{},log:fo(e&&e.log)};return e&&e.transform&&(t.transform=e.transform),{on:To.bind(null,t),onAny:Eo.bind(null,t),onError:yo.bind(null,t),removeListener:vo.bind(null,t),receive:ko.bind(null,t)}}function Ao(e){return JSON.stringify(e).replace(/[^\\]\\u[\da-f]{4}/g,(e=>e.substr(0,3)+e.substr(3).toUpperCase()))}async function So(e,t){return go(e,"string"==typeof t?t:Ao(t))}const Oo=["x-github-event","x-hub-signature-256","x-github-delivery"];async function Po(e,t,r,s,o){let n;try{n=new URL(r.url,"http://localhost").pathname}catch(e){return s.writeHead(422,{"content-type":"application/json"}),void s.end(JSON.stringify({error:`Request URL could not be parsed: ${r.url}`}))}if("POST"!==r.method||n!==t.path)return"function"==typeof o?o():t.onUnhandledRequest(r,s);if(!r.headers["content-type"]||!r.headers["content-type"].startsWith("application/json"))return s.writeHead(415,{"content-type":"application/json",accept:"application/json"}),void s.end(JSON.stringify({error:'Unsupported "Content-Type" header value. Must be "application/json"'}));const i=function(e){return Oo.filter((t=>!(t in e.headers)))}(r).join(", ");if(i)return s.writeHead(400,{"content-type":"application/json"}),void s.end(JSON.stringify({error:`Required headers missing: ${i}`}));const a=r.headers["x-github-event"],c=r.headers["x-hub-signature-256"],l=r.headers["x-github-delivery"];t.log.debug(`${a} event received (id: ${l})`);let u=!1;const p=setTimeout((()=>{u=!0,s.statusCode=202,s.end("still processing\n")}),9e3).unref();try{const t=await function(e){return e.body?("string"!=typeof e.body&&console.warn("[@octokit/webhooks] Passing the payload as a JSON object in `request.body` is deprecated and will be removed in a future release of `@octokit/webhooks`, please pass it as a a `string` instead."),Promise.resolve(e.body)):new Promise(((t,r)=>{let s="";e.setEncoding("utf8"),e.on("error",(e=>r(new co([e])))),e.on("data",(e=>s+=e)),e.on("end",(()=>{try{JSON.parse(s),t(s)}catch(e){e.message="Invalid JSON",e.status=400,r(new co([e]))}}))}))}(r);if(await e.verifyAndReceive({id:l,name:a,payload:t,signature:c}),clearTimeout(p),u)return;s.end("ok\n")}catch(e){if(clearTimeout(p),u)return;const r=Array.from(e)[0],o=r.message?`${r.name}: ${r.message}`:"Error: An Unspecified error occurred";s.statusCode=void 0!==r.status?r.status:500,t.log.error(e),s.end(JSON.stringify({error:o}))}}function Ro(e,t){t.writeHead(404,{"content-type":"application/json"}),t.end(JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`}))}var Fo=Object.freeze({__proto__:null,Webhooks:class{constructor(e){if(!e||!e.secret)throw new Error("[@octokit/webhooks] options.secret required");const t={eventHandler:Go(e),secret:e.secret,hooks:{},log:fo(e.log)};this.sign=So.bind(null,e.secret),this.verify=(t,r)=>("object"==typeof t&&console.warn("[@octokit/webhooks] Passing a JSON payload object to `verify()` is deprecated and the functionality will be removed in a future release of `@octokit/webhooks`"),async function(e,t,r){return mo(e,"string"==typeof t?t:Ao(t),r)}(e.secret,t,r)),this.on=t.eventHandler.on,this.onAny=t.eventHandler.onAny,this.onError=t.eventHandler.onError,this.removeListener=t.eventHandler.removeListener,this.receive=t.eventHandler.receive,this.verifyAndReceive=e=>("object"==typeof e.payload&&console.warn("[@octokit/webhooks] Passing a JSON payload object to `verifyAndReceive()` is deprecated and the functionality will be removed in a future release of `@octokit/webhooks`"),async function(e,t){if(!await mo(e.secret,"object"==typeof t.payload?Ao(t.payload):t.payload,t.signature)){const r=new Error("[@octokit/webhooks] signature does not match event payload and secret");return e.eventHandler.receive(Object.assign(r,{event:t,status:400}))}return e.eventHandler.receive({id:t.id,name:t.name,payload:"string"==typeof t.payload?JSON.parse(t.payload):t.payload})}(t,e))}},createEventHandler:Go,createNodeMiddleware:function(e,{path:t="/api/github/webhooks",onUnhandledRequest:r=Ro,log:s=fo()}={}){return Po.bind(null,e,{path:t,onUnhandledRequest:(e,t)=>(console.warn("[@octokit/webhooks] `onUnhandledRequest()` is deprecated and will be removed in a future release of `@octokit/webhooks`"),r(e,t)),log:s})},emitterEventNames:_o}),Uo=je(ps),$o=je(Fo),qo=je(wt);async function jo(e,t){return e.octokit.auth({type:"installation",installationId:t,factory(e){const r={...e.octokitOptions,authStrategy:Uo.createAppAuth,auth:{...e,installationId:t}};return new e.octokit.constructor(r)}})}function Co(e){return Object.assign(Io.bind(null,e),{iterator:xo.bind(null,e)})}async function Io(e,t){const r=xo(e)[Symbol.asyncIterator]();let s=await r.next();for(;!s.done;)await t(s.value),s=await r.next()}function xo(e){return{async*[Symbol.asyncIterator](){const t=qo.composePaginateRest.iterator(e.octokit,"GET /app/installations");for await(const{data:r}of t)for(const t of r){const r=await jo(e,t.id);yield{octokit:r,installation:t}}}}}function Do(e){return Object.assign(Lo.bind(null,e),{iterator:Ho.bind(null,e)})}async function Lo(e,t,r){const s=Ho(e,r?t:void 0)[Symbol.asyncIterator]();let o=await s.next();for(;!o.done;)r?await r(o.value):await t(o.value),o=await s.next()}function Ho(e,t){return{async*[Symbol.asyncIterator](){const r=t?function(e,t){return{async*[Symbol.asyncIterator](){yield{octokit:await e.getInstallationOctokit(t)}}}}(e,t.installationId):e.eachInstallation.iterator();for await(const{octokit:e}of r){const t=qo.composePaginateRest.iterator(e,"GET /installation/repositories");for await(const{data:r}of t)for(const t of r)yield{octokit:e,repository:t}}}}}class Wo{static defaults(e){return class extends(this){constructor(...t){super({...e,...t[0]})}}}constructor(e){const t=e.Octokit||_s.Octokit,r=Object.assign({appId:e.appId,privateKey:e.privateKey},e.oauth?{clientId:e.oauth.clientId,clientSecret:e.oauth.clientSecret}:{});this.octokit=new t({authStrategy:Uo.createAppAuth,auth:r,log:e.log}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),e.webhooks?this.webhooks=function(e,t){return new $o.Webhooks({secret:t.secret,transform:async t=>{if(!("installation"in t.payload)||"object"!=typeof t.payload.installation){const r=new e.constructor({authStrategy:ys.createUnauthenticatedAuth,auth:{reason:'"installation" key missing in webhook event payload'}});return{...t,octokit:r}}const r=t.payload.installation.id,s=await e.auth({type:"installation",installationId:r,factory:e=>new e.octokit.constructor({...e.octokitOptions,authStrategy:Uo.createAppAuth,auth:{...e,installationId:r}})});return s.hook.before("request",(e=>{e.headers["x-github-delivery"]=t.id})),{...t,octokit:s}}})}(this.octokit,e.webhooks):Object.defineProperty(this,"webhooks",{get(){throw new Error("[@octokit/app] webhooks option not set")}}),e.oauth?this.oauth=new to.OAuthApp({...e.oauth,clientType:"github-app",Octokit:t}):Object.defineProperty(this,"oauth",{get(){throw new Error("[@octokit/app] oauth.clientId / oauth.clientSecret options are not set")}}),this.getInstallationOctokit=jo.bind(null,this),this.eachInstallation=Co(this),this.eachRepository=Do(this)}}Wo.VERSION="13.1.2";var zo=Wo;const No=ut.plugin(yt,_t,At,qt).defaults({userAgent:"octokit.js/2.0.14",throttle:{onRateLimit:function(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),0===t.request.retryCount)return r.log.info(`Retrying after ${e} seconds!`),!0},onSecondaryRateLimit:function(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),0===t.request.retryCount)return r.log.info(`Retrying after ${e} seconds!`),!0}}});function Bo(e){let t,r;const s=e[1].default,o=l(s,e,e[0],null);return{c(){t=k("div"),o&&o.c()},m(e,s){E(e,t,s),o&&o.m(t,null),r=!0},p(e,[t]){o&&o.p&&(!r||1&t)&&d(o,s,e,e[0],r?p(s,e[0],t,null):h(e[0]),null)},i(e){r||(K(o,e),r=!0)},o(e){J(o,e),r=!1},d(e){e&&y(t),o&&o.d(e)}}}function Mo(e,t,r){let{$$slots:s={},$$scope:o}=t;return e.$$set=e=>{"$$scope"in e&&r(0,o=e.$$scope)},[o,s]}zo.defaults({Octokit:No}),Js.defaults({Octokit:No});class Vo extends te{constructor(e){super(),ee(this,e,Mo,Bo,a,{})}}function Ko(e){let t,r;return{c(){t=k("h3"),r=G(e[0]),O(t,"class","card svelte-csngm4"),R(t,"border","15px solid "+e[1])},m(e,s){E(e,t,s),T(t,r)},p(e,s){1&s&&P(r,e[0]),2&s&&R(t,"border","15px solid "+e[1])},d(e){e&&y(t)}}}function Jo(e){let t,r;return t=new Vo({props:{$$slots:{default:[Ko]},$$scope:{ctx:e}}}),{c(){Y(t.$$.fragment)},m(e,s){Q(t,e,s),r=!0},p(e,[r]){const s={};515&r&&(s.$$scope={dirty:r,ctx:e}),t.$set(s)},i(e){r||(K(t.$$.fragment,e),r=!0)},o(e){J(t.$$.fragment,e),r=!1},d(e){X(t,e)}}}function Yo(e,t,r){let{repo:s}=t,o=s.repo,n=s.workflow;const i=new No({auth:"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"});function a(e,t){return a=i.request("GET /repos/{owner}/{repo}/actions/workflows",{owner:e,repo:t})}async function c(){let e;const t="threefoldtech",r=await a(t,o);for(let t=0;t<r.data.workflows.length;t++)r.data.workflows[t].name===n&&(e=r.data.workflows[t].id);return await function(e,t,r){return i.request("GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",{owner:e,repo:t,workflow_id:r})}(t,o,e)}let l="Loading",u="darkgoldenrod";return(async()=>{const e=await c();console.log(e),r(0,l=e.data.workflow_runs[0].conclusion),r(1,u="success"===l?"#31A82D":"#DB3334"),r(0,l=null===l?"Working":l),r(1,u="Working"===l?"darkgoldenrod":u)})(),e.$$set=e=>{"repo"in e&&r(2,s=e.repo)},[l,u,s]}class Qo extends te{constructor(e){super(),ee(this,e,Yo,Jo,a,{repo:2})}}function Xo(e,t,r){const s=e.slice();return s[1]=t[r],s}function Zo(e){let t,r,s,o,n,i,a,c=e[1].name+"";return n=new Qo({props:{repo:e[1]}}),{c(){t=k("div"),r=k("p"),s=G(c),o=A(),Y(n.$$.fragment),i=A(),O(r,"class","name-display svelte-hgupy"),O(t,"class","repo svelte-hgupy")},m(e,c){E(e,t,c),T(t,r),T(r,s),T(t,o),Q(n,t,null),T(t,i),a=!0},p(e,t){(!a||1&t)&&c!==(c=e[1].name+"")&&P(s,c);const r={};1&t&&(r.repo=e[1]),n.$set(r)},i(e){a||(K(n.$$.fragment,e),a=!0)},o(e){J(n.$$.fragment,e),a=!1},d(e){e&&y(t),X(n)}}}function en(e){let t,r,s=e[0],o=[];for(let t=0;t<s.length;t+=1)o[t]=Zo(Xo(e,s,t));const n=e=>J(o[e],1,1,(()=>{o[e]=null}));return{c(){t=k("div");for(let e=0;e<o.length;e+=1)o[e].c();O(t,"class","repo svelte-hgupy")},m(e,s){E(e,t,s);for(let e=0;e<o.length;e+=1)o[e].m(t,null);r=!0},p(e,[r]){if(1&r){let i;for(s=e[0],i=0;i<s.length;i+=1){const n=Xo(e,s,i);o[i]?(o[i].p(n,r),K(o[i],1)):(o[i]=Zo(n),o[i].c(),K(o[i],1),o[i].m(t,null))}for(M(),i=s.length;i<o.length;i+=1)n(i);V()}},i(e){if(!r){for(let e=0;e<s.length;e+=1)K(o[e]);r=!0}},o(e){o=o.filter(Boolean);for(let e=0;e<o.length;e+=1)J(o[e]);r=!1},d(e){e&&y(t),b(o,e)}}}function tn(e,t,r){let{Repo:s=[]}=t;return e.$$set=e=>{"Repo"in e&&r(0,s=e.Repo)},[s]}class rn extends te{constructor(e){super(),ee(this,e,tn,en,a,{Repo:0})}}const sn=[];function on(e){return"[object Date]"===Object.prototype.toString.call(e)}function nn(e,t){if(e===t||e!=e)return()=>e;const r=typeof e;if(r!==typeof t||Array.isArray(e)!==Array.isArray(t))throw new Error("Cannot interpolate values of different type");if(Array.isArray(e)){const r=t.map(((t,r)=>nn(e[r],t)));return e=>r.map((t=>t(e)))}if("object"===r){if(!e||!t)throw new Error("Object cannot be null");if(on(e)&&on(t)){e=e.getTime();const r=(t=t.getTime())-e;return t=>new Date(e+t*r)}const r=Object.keys(t),s={};return r.forEach((r=>{s[r]=nn(e[r],t[r])})),e=>{const t={};return r.forEach((r=>{t[r]=s[r](e)})),t}}if("number"===r){const r=t-e;return t=>e+t*r}throw new Error(`Cannot interpolate ${r} values`)}function an(s,o={}){const n=function(t,r=e){let s;const o=new Set;function n(e){if(a(t,e)&&(t=e,s)){const e=!sn.length;for(const e of o)e[1](),sn.push(e,t);if(e){for(let e=0;e<sn.length;e+=2)sn[e][0](sn[e+1]);sn.length=0}}}return{set:n,update:function(e){n(e(t))},subscribe:function(i,a=e){const c=[i,a];return o.add(c),1===o.size&&(s=r(n)||e),i(t),()=>{o.delete(c),0===o.size&&(s(),s=null)}}}}(s);let i,c=s;function l(e,a){if(null==s)return n.set(s=e),Promise.resolve();c=e;let l=i,u=!1,{delay:p=0,duration:d=400,easing:h=t,interpolate:g=nn}=r(r({},o),a);if(0===d)return l&&(l.abort(),l=null),n.set(s=c),Promise.resolve();const T=m()+p;let E;return i=function(e){let t;return 0===_.size&&f(w),{promise:new Promise((r=>{_.add(t={c:e,f:r})})),abort(){_.delete(t)}}}((t=>{if(t<T)return!0;u||(E=g(s,e),"function"==typeof d&&(d=d(s,e)),u=!0),l&&(l.abort(),l=null);const r=t-T;return r>d?(n.set(s=e),!1):(n.set(s=E(h(r/d))),!0)})),i.promise}return{set:l,update:(e,t)=>l(e(c,s),t),subscribe:n.subscribe}}function cn(t){let r,s,o,n;return{c(){r=v("svg"),s=v("circle"),o=v("circle"),O(s,"r",t[3]),O(s,"cx",t[3]),O(s,"cy",t[3]),O(s,"fill",t[1]),O(o,"r",n=t[3]/2),O(o,"cx",t[3]),O(o,"cy",t[3]),O(o,"fill",t[1]),O(o,"stroke",t[2]),O(o,"stroke-width",t[3]),O(o,"stroke-dasharray",t[4]),O(r,"width",t[0]),O(r,"height",t[0]),O(r,"viewBox",t[5])},m(e,t){E(e,r,t),T(r,s),T(r,o)},p(e,[t]){8&t&&O(s,"r",e[3]),8&t&&O(s,"cx",e[3]),8&t&&O(s,"cy",e[3]),2&t&&O(s,"fill",e[1]),8&t&&n!==(n=e[3]/2)&&O(o,"r",n),8&t&&O(o,"cx",e[3]),8&t&&O(o,"cy",e[3]),2&t&&O(o,"fill",e[1]),4&t&&O(o,"stroke",e[2]),8&t&&O(o,"stroke-width",e[3]),16&t&&O(o,"stroke-dasharray",e[4]),1&t&&O(r,"width",e[0]),1&t&&O(r,"height",e[0]),32&t&&O(r,"viewBox",e[5])},i:e,o:e,d(e){e&&y(r)}}}function ln(e,t,r){let s,o,n,i,a,{size:c=200}=t,{percent:l=0}=t,{bgColor:u="#1e7145"}=t,{fgColor:p="#b91d47"}=t;return e.$$set=e=>{"size"in e&&r(0,c=e.size),"percent"in e&&r(6,l=e.percent),"bgColor"in e&&r(1,u=e.bgColor),"fgColor"in e&&r(2,p=e.fgColor)},e.$$.update=()=>{1&e.$$.dirty&&r(5,s=`0 0 ${c} ${c}`),1&e.$$.dirty&&r(3,o=c/2),8&e.$$.dirty&&r(8,n=Math.PI*o),320&e.$$.dirty&&r(7,i=n*(l/100)),384&e.$$.dirty&&r(4,a=`0 ${n-i} ${i}`)},[c,u,p,o,a,s,l,i,n]}class un extends te{constructor(e){super(),ee(this,e,ln,cn,a,{size:0,percent:6,bgColor:1,fgColor:2})}}function pn(e){let t,r,s;return r=new un({props:{size:200,percent:e[0]}}),{c(){t=k("body"),Y(r.$$.fragment),O(t,"class","svelte-npgpwm")},m(e,o){E(e,t,o),Q(r,t,null),s=!0},p(e,[t]){const s={};1&t&&(s.percent=e[0]),r.$set(s)},i(e){s||(K(r.$$.fragment,e),s=!0)},o(e){J(r.$$.fragment,e),s=!1},d(e){e&&y(t),X(r)}}}function dn(e,t,r){let s,{repo:o}=t,n=o.repo,i=o.workflow;const a=new No({auth:"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"});function l(e,t){return l=a.request("GET /repos/{owner}/{repo}/actions/workflows",{owner:e,repo:t})}async function u(){let e;const t="threefoldtech",r=await l(t,n);for(let t=0;t<r.data.workflows.length;t++)r.data.workflows[t].name===i&&(e=r.data.workflows[t].id);const s=await function(e,t,r){return a.request("GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",{owner:e,repo:t,workflow_id:r})}(t,n,e);return s}const p=an(0,{duration:1e3});return c(e,p,(e=>r(0,s=e))),(async()=>{let e=await async function(){const e=await u();let t=e.data.workflow_runs.length,r=0;for(let s=0;s<t;s++)"failure"==e.data.workflow_runs[s].conclusion&&(r+=1);return r}();console.log(e),p.set(e)})(),e.$$set=e=>{"repo"in e&&r(2,o=e.repo)},[s,p,o]}class hn extends te{constructor(e){super(),ee(this,e,dn,pn,a,{repo:2})}}function gn(e,t,r){const s=e.slice();return s[9]=t[r],s}function mn(e){let t,r,s,o,n,i,a,c,l,u,p,d,h,g,m,f=e[9].number+"",_=e[9].result+"",w=e[9].time.toLocaleString()+"";return{c(){t=k("div"),r=k("p"),s=G("Run Number:"),o=G(f),n=A(),i=k("p"),a=G(_),c=A(),l=k("p"),u=G(w),p=A(),d=k("a"),h=G("Logs"),m=A(),R(i,"color",e[9].color),O(d,"href",g=e[9].url),O(d,"target","_blank"),O(d,"rel","noreferrer"),O(t,"class","cards svelte-16a9fnl")},m(e,g){E(e,t,g),T(t,r),T(r,s),T(r,o),T(t,n),T(t,i),T(i,a),T(t,c),T(t,l),T(l,u),T(t,p),T(t,d),T(d,h),E(e,m,g)},p(e,t){1&t&&f!==(f=e[9].number+"")&&P(o,f),1&t&&_!==(_=e[9].result+"")&&P(a,_),1&t&&R(i,"color",e[9].color),1&t&&w!==(w=e[9].time.toLocaleString()+"")&&P(u,w),1&t&&g!==(g=e[9].url)&&O(d,"href",g)},d(e){e&&y(t),e&&y(m)}}}function fn(e){let t,r;return t=new Vo({props:{$$slots:{default:[mn]},$$scope:{ctx:e}}}),{c(){Y(t.$$.fragment)},m(e,s){Q(t,e,s),r=!0},p(e,r){const s={};4097&r&&(s.$$scope={dirty:r,ctx:e}),t.$set(s)},i(e){r||(K(t.$$.fragment,e),r=!0)},o(e){J(t.$$.fragment,e),r=!1},d(e){X(t,e)}}}function _n(e){let t,r,s=e[0],o=[];for(let t=0;t<s.length;t+=1)o[t]=fn(gn(e,s,t));const n=e=>J(o[e],1,1,(()=>{o[e]=null}));return{c(){for(let e=0;e<o.length;e+=1)o[e].c();t=S()},m(e,s){for(let t=0;t<o.length;t+=1)o[t].m(e,s);E(e,t,s),r=!0},p(e,[r]){if(1&r){let i;for(s=e[0],i=0;i<s.length;i+=1){const n=gn(e,s,i);o[i]?(o[i].p(n,r),K(o[i],1)):(o[i]=fn(n),o[i].c(),K(o[i],1),o[i].m(t.parentNode,t))}for(M(),i=s.length;i<o.length;i+=1)n(i);V()}},i(e){if(!r){for(let e=0;e<s.length;e+=1)K(o[e]);r=!0}},o(e){o=o.filter(Boolean);for(let e=0;e<o.length;e+=1)J(o[e]);r=!1},d(e){b(o,e),e&&y(t)}}}function wn(e,t,r){let{repo:s}=t,o=s.repo,n=s.workflow;const i=new No({auth:"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"});function a(e,t){return a=i.request("GET /repos/{owner}/{repo}/actions/workflows",{owner:e,repo:t})}async function c(){let e;const t="threefoldtech",r=await a(t,o);for(let t=0;t<r.data.workflows.length;t++)r.data.workflows[t].name===n&&(e=r.data.workflows[t].id);const s=await function(e,t,r){return i.request("GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",{owner:e,repo:t,workflow_id:r})}(t,o,e);return s}let l=[];return(async()=>{r(0,l=await async function(){let e=[];const t=await c();let r,s,o,n="darkgoldenrod",i="Loading",a=t.data.workflow_runs.length>5?5:t.data.workflow_runs.length;for(let c=0;c<a;c++)r=t.data.workflow_runs[c].run_number,s=t.data.workflow_runs[c].conclusion,o=new Date(t.data.workflow_runs[c].run_started_at),i=await fetch(t.data.workflow_runs[c].jobs_url).then((e=>e.json())).then((e=>e.jobs[0].html_url)),n="success"===s?"darkgreen":"crimson",e.push({number:r,result:s,time:o,url:i,color:n});return e}()),console.log(l)})(),e.$$set=e=>{"repo"in e&&r(1,s=e.repo)},[l,s]}class Tn extends te{constructor(e){super(),ee(this,e,wn,_n,a,{repo:1})}}function En(e){let t,r,s,o,n,i,a,c,u,g,m,f,_,w;const b=e[3].default,S=l(b,e,e[2],null);return{c(){t=k("div"),r=k("h3"),s=k("button"),o=G(e[0]),n=A(),i=v("svg"),a=v("path"),c=v("path"),u=A(),g=k("div"),S&&S.c(),O(a,"class","vert svelte-1xy6o65"),O(a,"d","M10 1V19"),O(a,"stroke","black"),O(a,"stroke-width","2"),O(c,"d","M1 10L19 10"),O(c,"stroke","black"),O(c,"stroke-width","2"),O(i,"viewBox","0 0 20 20"),O(i,"fill","none"),O(i,"class","svelte-1xy6o65"),O(s,"aria-expanded",e[1]),O(s,"class","svelte-1xy6o65"),O(r,"class","svelte-1xy6o65"),O(g,"class","contents"),g.hidden=m=!e[1],O(t,"class","collapsible svelte-1xy6o65")},m(l,p){var d,h,m,y;E(l,t,p),T(t,r),T(r,s),T(s,o),T(s,n),T(s,i),T(i,a),T(i,c),T(t,u),T(t,g),S&&S.m(g,null),f=!0,_||(d=s,h="click",m=e[4],d.addEventListener(h,m,y),w=()=>d.removeEventListener(h,m,y),_=!0)},p(e,[t]){(!f||1&t)&&P(o,e[0]),(!f||2&t)&&O(s,"aria-expanded",e[1]),S&&S.p&&(!f||4&t)&&d(S,b,e,e[2],f?p(b,e[2],t,null):h(e[2]),null),(!f||2&t&&m!==(m=!e[1]))&&(g.hidden=m)},i(e){f||(K(S,e),f=!0)},o(e){J(S,e),f=!1},d(e){e&&y(t),S&&S.d(e),_=!1,w()}}}function yn(e,t,r){let{$$slots:s={},$$scope:o}=t,{headerText:n}=t,i=!1;return e.$$set=e=>{"headerText"in e&&r(0,n=e.headerText),"$$scope"in e&&r(2,o=e.$$scope)},[n,i,o,s,()=>r(1,i=!i)]}class bn extends te{constructor(e){super(),ee(this,e,yn,En,a,{headerText:0})}}function kn(e,t,r){const s=e.slice();return s[1]=t[r],s}function vn(e){let t,r,s,o,n,i,a,c;return o=new Tn({props:{repo:e[1]}}),a=new hn({props:{repo:e[1]}}),{c(){t=k("div"),r=k("div"),s=k("div"),Y(o.$$.fragment),n=A(),i=k("div"),Y(a.$$.fragment),O(s,"class","repo svelte-12vb76d"),O(i,"class","chart svelte-12vb76d"),O(r,"class","repo svelte-12vb76d"),O(t,"class","content svelte-12vb76d")},m(e,l){E(e,t,l),T(t,r),T(r,s),Q(o,s,null),T(r,n),T(r,i),Q(a,i,null),c=!0},p(e,t){const r={};1&t&&(r.repo=e[1]),o.$set(r);const s={};1&t&&(s.repo=e[1]),a.$set(s)},i(e){c||(K(o.$$.fragment,e),K(a.$$.fragment,e),c=!0)},o(e){J(o.$$.fragment,e),J(a.$$.fragment,e),c=!1},d(e){e&&y(t),X(o),X(a)}}}function Gn(e){let t,r,s,o;return r=new bn({props:{headerText:e[1].name,$$slots:{default:[vn]},$$scope:{ctx:e}}}),{c(){t=k("section"),Y(r.$$.fragment),s=A(),O(t,"class","svelte-12vb76d")},m(e,n){E(e,t,n),Q(r,t,null),T(t,s),o=!0},p(e,t){const s={};1&t&&(s.headerText=e[1].name),17&t&&(s.$$scope={dirty:t,ctx:e}),r.$set(s)},i(e){o||(K(r.$$.fragment,e),o=!0)},o(e){J(r.$$.fragment,e),o=!1},d(e){e&&y(t),X(r)}}}function An(e){let t,r,s=e[0],o=[];for(let t=0;t<s.length;t+=1)o[t]=Gn(kn(e,s,t));const n=e=>J(o[e],1,1,(()=>{o[e]=null}));return{c(){for(let e=0;e<o.length;e+=1)o[e].c();t=S()},m(e,s){for(let t=0;t<o.length;t+=1)o[t].m(e,s);E(e,t,s),r=!0},p(e,[r]){if(1&r){let i;for(s=e[0],i=0;i<s.length;i+=1){const n=kn(e,s,i);o[i]?(o[i].p(n,r),K(o[i],1)):(o[i]=Gn(n),o[i].c(),K(o[i],1),o[i].m(t.parentNode,t))}for(M(),i=s.length;i<o.length;i+=1)n(i);V()}},i(e){if(!r){for(let e=0;e<s.length;e+=1)K(o[e]);r=!0}},o(e){o=o.filter(Boolean);for(let e=0;e<o.length;e+=1)J(o[e]);r=!1},d(e){b(o,e),e&&y(t)}}}function Sn(e,t,r){let{Repo:s=[]}=t;return e.$$set=e=>{"Repo"in e&&r(0,s=e.Repo)},[s]}class On extends te{constructor(e){super(),ee(this,e,Sn,An,a,{Repo:0})}}function Pn(t){let r,s,o,n,i,a,c,l,u,p,d;return i=new rn({props:{Repo:t[0]}}),p=new On({props:{Repo:t[0]}}),{c(){r=k("div"),r.innerHTML="<h2>Test Dashboard</h2>",s=A(),o=k("main"),n=k("div"),Y(i.$$.fragment),a=A(),c=k("h1"),c.textContent="Statistics",l=A(),u=k("div"),Y(p.$$.fragment),O(r,"class","nav svelte-wgert1"),O(n,"class","cards svelte-wgert1"),R(c,"text-align","center"),O(u,"class","cards svelte-wgert1"),O(o,"class","container")},m(e,t){E(e,r,t),E(e,s,t),E(e,o,t),T(o,n),Q(i,n,null),T(o,a),T(o,c),T(o,l),T(o,u),Q(p,u,null),d=!0},p:e,i(e){d||(K(i.$$.fragment,e),K(p.$$.fragment,e),d=!0)},o(e){J(i.$$.fragment,e),J(p.$$.fragment,e),d=!1},d(e){e&&y(r),e&&y(s),e&&y(o),X(i),X(p)}}}function Rn(e){return[[{name:"Dashboard",repo:"tfgrid_dashboard",workflow:"Selenium Tests"},{name:"Weblets",repo:"grid_weblets",workflow:"build"},{name:"TSClient",repo:"grid3_client_ts",workflow:"grid3-nightly"},{name:"Terraform",repo:"terraform-provider-grid",workflow:"Run Tests"},{name:"Proxy",repo:"tfgridclient_proxy",workflow:"Integration tests"}]]}return new class extends te{constructor(e){super(),ee(this,e,Rn,Pn,a,{})}}({target:document.body})}();
//# sourceMappingURL=bundle.js.map
